{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\Demand\\\\Components\\\\CircularBarPlot\\\\CircularBarPlot.js\";\nimport React from 'react';\nimport * as d3 from 'd3';\ndata = [{\n  'name': 'USA',\n  'value': 12534\n}, {\n  'name': 'Russia',\n  'value': 6148\n}, {\n  'name': 'Germany',\n  'value': 615\n}];\n\nfunction CircularBarPlot() {\n  // set the dimensions and margins of the graph\n  let margin = {\n    top: 100,\n    right: 0,\n    bottom: 0,\n    left: 0\n  },\n      width = 460 - margin.left - margin.right,\n      height = 460 - margin.top - margin.bottom,\n      innerRadius = 90,\n      outerRadius = Math.min(width, height) / 2; // the outerRadius goes from the middle of the SVG area to the border\n  // append the svg object\n\n  let svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + (width / 2 + margin.left) + \",\" + (height / 2 + margin.top) + \")\"); // Scales\n\n  let x = d3.scaleBand().range([0, 2 * Math.PI]) // X axis goes from 0 to 2pi = all around the circle. If I stop at 1Pi, it will be around a half circle\n  .align(0) // This does nothing\n  .domain(data.map(d => {\n    return d.Country;\n  })); // The domain of the X axis is the list of states.\n\n  let y = d3.scaleRadial().range([innerRadius, outerRadius]) // Domain will be define later.\n  .domain([0, 14000]); // Domain of Y is from 0 to the max seen in the data\n  // Add the bars\n\n  svg.append(\"g\").selectAll(\"path\").data(data).enter().append(\"path\").attr(\"fill\", \"#69b3a2\").attr(\"d\", d3.arc() // imagine your doing a part of a donut plot\n  .innerRadius(innerRadius).outerRadius(function (d) {\n    return y(d['Value']);\n  }).startAngle(function (d) {\n    return x(d.Country);\n  }).endAngle(function (d) {\n    return x(d.Country) + x.bandwidth();\n  }).padAngle(0.01).padRadius(innerRadius)); // Add the labels\n\n  svg.append(\"g\").selectAll(\"g\").data(data).enter().append(\"g\").attr(\"text-anchor\", function (d) {\n    return (x(d.Country) + x.bandwidth() / 2 + Math.PI) % (2 * Math.PI) < Math.PI ? \"end\" : \"start\";\n  }).attr(\"transform\", function (d) {\n    return \"rotate(\" + ((x(d.Country) + x.bandwidth() / 2) * 180 / Math.PI - 90) + \")\" + \"translate(\" + (y(d['Value']) + 10) + \",0)\";\n  }).append(\"text\").text(function (d) {\n    return d.Country;\n  }).attr(\"transform\", function (d) {\n    return (x(d.Country) + x.bandwidth() / 2 + Math.PI) % (2 * Math.PI) < Math.PI ? \"rotate(180)\" : \"rotate(0)\";\n  }).style(\"font-size\", \"11px\").attr(\"alignment-baseline\", \"middle\");\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"my_dataviz\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"CircularBarPlot Example \", svg));\n}\n\nexport default CircularBarPlot;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Demand/Components/CircularBarPlot/CircularBarPlot.js"],"names":["React","d3","data","CircularBarPlot","margin","top","right","bottom","left","width","height","innerRadius","outerRadius","Math","min","svg","select","append","attr","x","scaleBand","range","PI","align","domain","map","d","Country","y","scaleRadial","selectAll","enter","arc","startAngle","endAngle","bandwidth","padAngle","padRadius","text","style"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as d3 from 'd3';\r\n\r\ndata = [{'name':'USA','value':12534},{'name':'Russia','value':6148},{'name':'Germany','value':615}];\r\n\r\nfunction CircularBarPlot() {\r\n\r\n    \r\n// set the dimensions and margins of the graph\r\nlet margin = { top: 100, right: 0, bottom: 0, left: 0 },\r\nwidth = 460 - margin.left - margin.right,\r\nheight = 460 - margin.top - margin.bottom,\r\ninnerRadius = 90,\r\nouterRadius = Math.min(width, height) / 2;   // the outerRadius goes from the middle of the SVG area to the border\r\n\r\n// append the svg object\r\nlet svg = d3.select(\"#my_dataviz\")\r\n.append(\"svg\")\r\n.attr(\"width\", width + margin.left + margin.right)\r\n.attr(\"height\", height + margin.top + margin.bottom)\r\n.append(\"g\")\r\n.attr(\"transform\", \"translate(\" + (width / 2 + margin.left) + \",\" + (height / 2 + margin.top) + \")\");\r\n\r\n\r\n// Scales\r\nlet x = d3.scaleBand()\r\n    .range([0, 2 * Math.PI])    // X axis goes from 0 to 2pi = all around the circle. If I stop at 1Pi, it will be around a half circle\r\n    .align(0)                  // This does nothing\r\n    .domain(data.map(d => { return d.Country; })); // The domain of the X axis is the list of states.\r\nlet y = d3.scaleRadial()\r\n    .range([innerRadius, outerRadius])   // Domain will be define later.\r\n    .domain([0, 14000]); // Domain of Y is from 0 to the max seen in the data\r\n\r\n// Add the bars\r\nsvg.append(\"g\")\r\n    .selectAll(\"path\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"path\")\r\n    .attr(\"fill\", \"#69b3a2\")\r\n    .attr(\"d\", d3.arc()     // imagine your doing a part of a donut plot\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(function (d) { return y(d['Value']); })\r\n        .startAngle(function (d) { return x(d.Country); })\r\n        .endAngle(function (d) { return x(d.Country) + x.bandwidth(); })\r\n        .padAngle(0.01)\r\n        .padRadius(innerRadius))\r\n\r\n// Add the labels\r\nsvg.append(\"g\")\r\n    .selectAll(\"g\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"g\")\r\n    .attr(\"text-anchor\", function (d) { return (x(d.Country) + x.bandwidth() / 2 + Math.PI) % (2 * Math.PI) < Math.PI ? \"end\" : \"start\"; })\r\n    .attr(\"transform\", function (d) { return \"rotate(\" + ((x(d.Country) + x.bandwidth() / 2) * 180 / Math.PI - 90) + \")\" + \"translate(\" + (y(d['Value']) + 10) + \",0)\"; })\r\n    .append(\"text\")\r\n    .text(function (d) { return (d.Country) })\r\n    .attr(\"transform\", function (d) { return (x(d.Country) + x.bandwidth() / 2 + Math.PI) % (2 * Math.PI) < Math.PI ? \"rotate(180)\" : \"rotate(0)\"; })\r\n    .style(\"font-size\", \"11px\")\r\n    .attr(\"alignment-baseline\", \"middle\");\r\n\r\n    return (\r\n        <>\r\n            <div id=\"my_dataviz\">CircularBarPlot Example {svg}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CircularBarPlot;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}