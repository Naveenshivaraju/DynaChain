{"ast":null,"code":"import _slicedToArray from\"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import'./Map.css';import{withGoogleMap,withScriptjs,GoogleMap,Marker,InfoWindow}from\"react-google-maps\";import*as MapData from\"./Mapdata.json\";import MyProvider,{MyContext}from\"../../MyProvider\";//import mapStyles from \"./mapStyles\";\nfunction Map(){var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedPark=_useState2[0],setSelectedPark=_useState2[1];useEffect(function(){var listener=function listener(e){if(e.key===\"Escape\"){setSelectedPark(null);}};window.addEventListener(\"keydown\",listener);return function(){window.removeEventListener(\"keydown\",listener);};},[]);return/*#__PURE__*/React.createElement(MyContext.Consumer,null,function(context){return/*#__PURE__*/React.createElement(GoogleMap,{defaultZoom:1,defaultCenter:{lat:30.3601,lng:-0.0589}/* defaultOptions={{ styles: mapStyles }} */},MapData.ActivityCenter.map(function(AC){return/*#__PURE__*/React.createElement(Marker/*  key={park.properties.PARK_ID} */,{position:{lat:AC.coordinates[0],lng:AC.coordinates[1]},onClick:function onClick(){setSelectedPark(AC);},icon:{url:AC.iconurl,scaledSize:new window.google.maps.Size(25,25)}});}),selectedPark&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(InfoWindow,{onCloseClick:function onCloseClick(){setSelectedPark(null);},position:{lat:selectedPark.coordinates[0],lng:selectedPark.coordinates[1]}},/*#__PURE__*/React.createElement(\"div\",null,console.log(context.state),console.log(context.increment),/*#__PURE__*/React.createElement(\"a\",{value:selectedPark.name,onClick:function onClick(){return context.increment(selectedPark.name);},style:{cursor:'pointer'},className:\"ACLink\"},/*#__PURE__*/React.createElement(\"div\",null,selectedPark.name)),/*#__PURE__*/React.createElement(\"p\",null,selectedPark.description)))));});}var MapWrapped=withScriptjs(withGoogleMap(Map));export default function WorldMap(){return/*#__PURE__*/React.createElement(\"div\",{style:{width:\"100%\",height:\"270px\"}},/*#__PURE__*/React.createElement(MapWrapped,{googleMapURL:\"https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDMVtICVlllbzey02Wi-iR0vY_a4SRDdhc&callback=initMap\",loadingElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),containerElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}}),mapElement:/*#__PURE__*/React.createElement(\"div\",{style:{height:\"100%\"}})}));}","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Components/Map/WorldMap.js"],"names":["React","useState","useEffect","withGoogleMap","withScriptjs","GoogleMap","Marker","InfoWindow","MapData","MyProvider","MyContext","Map","selectedPark","setSelectedPark","listener","e","key","window","addEventListener","removeEventListener","context","lat","lng","ActivityCenter","map","AC","coordinates","url","iconurl","scaledSize","google","maps","Size","console","log","state","increment","name","cursor","description","MapWrapped","WorldMap","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './Map.css';\n\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow\n} from \"react-google-maps\";\nimport * as MapData from \"./Mapdata.json\";\nimport MyProvider, { MyContext } from \"../../MyProvider\";\n//import mapStyles from \"./mapStyles\";\n\nfunction Map() {\n  const [selectedPark, setSelectedPark] = useState(null);\n\n  useEffect(() => {\n    const listener = e => {\n      if (e.key === \"Escape\") {\n        setSelectedPark(null);\n      }\n    };\n    window.addEventListener(\"keydown\", listener);\n\n    return () => {\n      window.removeEventListener(\"keydown\", listener);\n    };\n  }, []);\n\n  return (\n    <MyContext.Consumer>\n      { (context) => (\n    <GoogleMap\n      defaultZoom={1}\n      defaultCenter={{  lat: 30.3601, lng: -0.0589  }}\n      /* defaultOptions={{ styles: mapStyles }} */\n    >\n      {MapData.ActivityCenter.map(AC => (\n        <Marker\n         /*  key={park.properties.PARK_ID} */\n          position={{\n            lat: AC.coordinates[0],\n            lng: AC.coordinates[1]\n          }}\n          onClick={() => {\n            setSelectedPark(AC);\n          }}\n          icon={{\n            url: AC.iconurl,\n            scaledSize: new window.google.maps.Size(25, 25)\n          }}\n        />\n      ))}\n\n      {selectedPark && (\n        <div>\n        <InfoWindow\n          onCloseClick={() => {\n            setSelectedPark(null);\n          }}\n          position={{\n            lat: selectedPark.coordinates[0],\n            lng: selectedPark.coordinates[1],\n          }}\n        >\n          <div>\n            {console.log(context.state)}\n            {console.log(context.increment)}\n            <a value={selectedPark.name} onClick={() => context.increment(selectedPark.name)} style={{cursor:'pointer'}} className=\"ACLink\"><div>{selectedPark.name}</div></a>\n            <p>{selectedPark.description}</p>\n          </div>\n        </InfoWindow>\n        </div>\n      )}\n    </GoogleMap>\n      )}\n    </MyContext.Consumer>\n  );\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\n\nexport default function WorldMap() {\n  return (\n    <div style={{ width: \"100%\", height: \"270px\" }}>\n      <MapWrapped\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=AIzaSyDMVtICVlllbzey02Wi-iR0vY_a4SRDdhc&callback=initMap`}\n        loadingElement={<div style={{ height: `100%` }} />}\n        containerElement={<div style={{ height: `100%` }} />}\n        mapElement={<div style={{ height: `100%` }} />}\n      />\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}