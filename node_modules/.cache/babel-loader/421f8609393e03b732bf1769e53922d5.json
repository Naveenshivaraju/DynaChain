{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\Demand\\\\Components\\\\UnitDemand\\\\UnitDemand.js\";\nimport React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport data from './Data.json';\nimport Moment from 'moment';\nconst chartdata = data.data;\n\nconst UnitDemand = () => {\n  let datemarker = new Date(\"2018-01-05\").getTime();\n  console.log(datemarker);\n  let datetemp = Moment(\"2018-01-05\").format('YYYY-MM-DD');\n  console.log(datetemp);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '500px',\n      width: '800px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveLine, {\n    markers: [{\n      axis: 'y',\n      value: 10,\n      lineStyle: {\n        stroke: '#b0413e',\n        strokeWidth: 2\n      },\n      legend: 'y marker',\n      legendOrientation: 'vertical'\n    }, {\n      axis: 'x',\n      value: \"H\",\n      lineStyle: {\n        stroke: '#b0413e',\n        strokeWidth: 2\n      },\n      legend: 'x marker'\n    }],\n    data: chartdata,\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 50,\n      left: 60\n    }\n    /* xScale={{\r\n        type: 'time',\r\n        format: '%Y-%m-%d',\r\n        useUTC: false,\r\n        precision: 'day',\r\n    }}\r\n    xFormat=\"time:%Y-%m-%d\" */\n    ,\n    yScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto',\n      stacked: true,\n      reverse: false\n    },\n    xScale: {\n      type: 'linear',\n      min: 'auto',\n      max: 'auto',\n      stacked: true,\n      reverse: false\n    },\n    axisTop: null,\n    axisRight: null\n    /*  axisBottom={{\r\n         format: '%b %d',\r\n         tickValues: 'every 1 days',\r\n         legend: 'time scale',\r\n         legendOffset: -12,\r\n     }} */\n    ,\n    axisBottom: {\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'transportation',\n      legendOffset: 36,\n      legendPosition: 'middle'\n    },\n    axisLeft: {\n      orient: 'left',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'count',\n      legendOffset: -40,\n      legendPosition: 'middle'\n    },\n    colors: {\n      scheme: 'nivo'\n    },\n    pointSize: 10,\n    pointColor: {\n      theme: 'background'\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: 'serieColor'\n    },\n    pointLabel: \"y\",\n    pointLabelYOffset: -12,\n    useMesh: true,\n    legends: [{\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 100,\n      translateY: 0,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 80,\n      itemHeight: 20,\n      itemOpacity: 0.75,\n      symbolSize: 12,\n      symbolShape: 'circle',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemBackground: 'rgba(0, 0, 0, .03)',\n          itemOpacity: 1\n        }\n      }]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default UnitDemand;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Demand/Components/UnitDemand/UnitDemand.js"],"names":["React","ResponsiveLine","data","Moment","chartdata","UnitDemand","datemarker","Date","getTime","console","log","datetemp","format","height","width","axis","value","lineStyle","stroke","strokeWidth","legend","legendOrientation","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport data from './Data.json'\r\nimport Moment from 'moment';\r\n\r\nconst chartdata = data.data\r\n\r\nconst UnitDemand = () => {\r\n\r\n    let datemarker = new Date(\"2018-01-05\").getTime(); \r\n    console.log(datemarker);\r\n\r\n    let datetemp = Moment(\"2018-01-05\").format('YYYY-MM-DD')\r\n\r\n    console.log(datetemp)\r\n\r\n\r\n    return (\r\n    <div style={{height:'500px',width:'800px'}}>\r\n    <ResponsiveLine\r\n\r\n         markers={[\r\n            {\r\n                axis: 'y',\r\n                value: 10,\r\n                lineStyle: { stroke: '#b0413e', strokeWidth: 2 },\r\n                legend: 'y marker',\r\n                legendOrientation: 'vertical',\r\n            },\r\n            {\r\n                axis: 'x',\r\n                value: \"H\",\r\n                lineStyle: { stroke: '#b0413e', strokeWidth: 2 },\r\n                legend: 'x marker',\r\n            },\r\n        ]}\r\n\r\n\r\n        data={chartdata}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        \r\n        /* xScale={{\r\n            type: 'time',\r\n            format: '%Y-%m-%d',\r\n            useUTC: false,\r\n            precision: 'day',\r\n        }}\r\n        xFormat=\"time:%Y-%m-%d\" */\r\n\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        xScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n       /*  axisBottom={{\r\n            format: '%b %d',\r\n            tickValues: 'every 1 days',\r\n            legend: 'time scale',\r\n            legendOffset: -12,\r\n        }} */\r\n\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'transportation',\r\n            legendOffset: 36,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'count',\r\n            legendOffset: -40,\r\n            legendPosition: 'middle'\r\n        }}\r\n        colors={{ scheme: 'nivo' }}\r\n        pointSize={10}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabel=\"y\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 100,\r\n                translateY: 0,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n    </div>\r\n)\r\n}\r\n\r\nexport default UnitDemand;\r\n"]},"metadata":{},"sourceType":"module"}