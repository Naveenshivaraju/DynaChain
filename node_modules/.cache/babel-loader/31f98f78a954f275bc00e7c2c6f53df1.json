{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\Demand\\\\Components\\\\UnitDemand\\\\UnitDemand.js\";\nimport React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\n/* import data from './Data.json' */\n\nconst data = [{\n  \"id\": \"japan\",\n  \"color\": \"hsl(46, 70%, 50%)\",\n  \"data\": [{\n    \"x\": \"plane\",\n    \"y\": 228\n  }, {\n    \"x\": \"helicopter\",\n    \"y\": 187\n  }, {\n    \"x\": \"boat\",\n    \"y\": 109\n  }, {\n    \"x\": \"train\",\n    \"y\": 77\n  }, {\n    \"x\": \"subway\",\n    \"y\": 225\n  }, {\n    \"x\": \"bus\",\n    \"y\": 63\n  }, {\n    \"x\": \"car\",\n    \"y\": 197\n  }, {\n    \"x\": \"moto\",\n    \"y\": 122\n  }, {\n    \"x\": \"bicycle\",\n    \"y\": 193\n  }, {\n    \"x\": \"horse\",\n    \"y\": 245\n  }, {\n    \"x\": \"skateboard\",\n    \"y\": 93\n  }, {\n    \"x\": \"others\",\n    \"y\": 84\n  }]\n}, {\n  \"id\": \"france\",\n  \"color\": \"hsl(195, 70%, 50%)\",\n  \"data\": [{\n    \"x\": \"plane\",\n    \"y\": 30\n  }, {\n    \"x\": \"helicopter\",\n    \"y\": 212\n  }, {\n    \"x\": \"boat\",\n    \"y\": 109\n  }, {\n    \"x\": \"train\",\n    \"y\": 165\n  }, {\n    \"x\": \"subway\",\n    \"y\": 14\n  }, {\n    \"x\": \"bus\",\n    \"y\": 77\n  }, {\n    \"x\": \"car\",\n    \"y\": 94\n  }, {\n    \"x\": \"moto\",\n    \"y\": 40\n  }, {\n    \"x\": \"bicycle\",\n    \"y\": 221\n  }, {\n    \"x\": \"horse\",\n    \"y\": 50\n  }, {\n    \"x\": \"skateboard\",\n    \"y\": 89\n  }, {\n    \"x\": \"others\",\n    \"y\": 61\n  }]\n}, {\n  \"id\": \"us\",\n  \"color\": \"hsl(236, 70%, 50%)\",\n  \"data\": [{\n    \"x\": \"plane\",\n    \"y\": 102\n  }, {\n    \"x\": \"helicopter\",\n    \"y\": 252\n  }, {\n    \"x\": \"boat\",\n    \"y\": 181\n  }, {\n    \"x\": \"train\",\n    \"y\": 6\n  }, {\n    \"x\": \"subway\",\n    \"y\": 249\n  }, {\n    \"x\": \"bus\",\n    \"y\": 193\n  }, {\n    \"x\": \"car\",\n    \"y\": 289\n  }, {\n    \"x\": \"moto\",\n    \"y\": 88\n  }, {\n    \"x\": \"bicycle\",\n    \"y\": 182\n  }, {\n    \"x\": \"horse\",\n    \"y\": 121\n  }, {\n    \"x\": \"skateboard\",\n    \"y\": 276\n  }, {\n    \"x\": \"others\",\n    \"y\": 53\n  }]\n}, {\n  \"id\": \"germany\",\n  \"color\": \"hsl(223, 70%, 50%)\",\n  \"data\": [{\n    \"x\": \"plane\",\n    \"y\": 133\n  }, {\n    \"x\": \"helicopter\",\n    \"y\": 254\n  }, {\n    \"x\": \"boat\",\n    \"y\": 97\n  }, {\n    \"x\": \"train\",\n    \"y\": 5\n  }, {\n    \"x\": \"subway\",\n    \"y\": 113\n  }, {\n    \"x\": \"bus\",\n    \"y\": 40\n  }, {\n    \"x\": \"car\",\n    \"y\": 43\n  }, {\n    \"x\": \"moto\",\n    \"y\": 79\n  }, {\n    \"x\": \"bicycle\",\n    \"y\": 101\n  }, {\n    \"x\": \"horse\",\n    \"y\": 201\n  }, {\n    \"x\": \"skateboard\",\n    \"y\": 108\n  }, {\n    \"x\": \"others\",\n    \"y\": 118\n  }]\n}, {\n  \"id\": \"norway\",\n  \"color\": \"hsl(326, 70%, 50%)\",\n  \"data\": [{\n    \"x\": \"plane\",\n    \"y\": 194\n  }, {\n    \"x\": \"helicopter\",\n    \"y\": 82\n  }, {\n    \"x\": \"boat\",\n    \"y\": 119\n  }, {\n    \"x\": \"train\",\n    \"y\": 202\n  }, {\n    \"x\": \"subway\",\n    \"y\": 230\n  }, {\n    \"x\": \"bus\",\n    \"y\": 86\n  }, {\n    \"x\": \"car\",\n    \"y\": 1\n  }, {\n    \"x\": \"moto\",\n    \"y\": 99\n  }, {\n    \"x\": \"bicycle\",\n    \"y\": 249\n  }, {\n    \"x\": \"horse\",\n    \"y\": 275\n  }, {\n    \"x\": \"skateboard\",\n    \"y\": 21\n  }, {\n    \"x\": \"others\",\n    \"y\": 22\n  }]\n}];\n\nconst UnitDemand = () => /*#__PURE__*/React.createElement(ResponsiveLine, {\n  data: data,\n  margin: {\n    top: 50,\n    right: 110,\n    bottom: 50,\n    left: 60\n  },\n  xScale: {\n    type: 'point'\n  },\n  yScale: {\n    type: 'linear',\n    min: 'auto',\n    max: 'auto',\n    stacked: true,\n    reverse: false\n  },\n  axisTop: null,\n  axisRight: null,\n  axisBottom: {\n    orient: 'bottom',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'transportation',\n    legendOffset: 36,\n    legendPosition: 'middle'\n  },\n  axisLeft: {\n    orient: 'left',\n    tickSize: 5,\n    tickPadding: 5,\n    tickRotation: 0,\n    legend: 'count',\n    legendOffset: -40,\n    legendPosition: 'middle'\n  },\n  colors: {\n    scheme: 'nivo'\n  },\n  pointSize: 10,\n  pointColor: {\n    theme: 'background'\n  },\n  pointBorderWidth: 2,\n  pointBorderColor: {\n    from: 'serieColor'\n  },\n  pointLabel: \"y\",\n  pointLabelYOffset: -12,\n  useMesh: true,\n  legends: [{\n    anchor: 'bottom-right',\n    direction: 'column',\n    justify: false,\n    translateX: 100,\n    translateY: 0,\n    itemsSpacing: 0,\n    itemDirection: 'left-to-right',\n    itemWidth: 80,\n    itemHeight: 20,\n    itemOpacity: 0.75,\n    symbolSize: 12,\n    symbolShape: 'circle',\n    symbolBorderColor: 'rgba(0, 0, 0, .5)',\n    effects: [{\n      on: 'hover',\n      style: {\n        itemBackground: 'rgba(0, 0, 0, .03)',\n        itemOpacity: 1\n      }\n    }]\n  }],\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }\n});\n\nexport default UnitDemand;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Demand/Components/UnitDemand/UnitDemand.js"],"names":["React","ResponsiveLine","data","UnitDemand","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legend","legendOffset","legendPosition","scheme","theme","from","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\n/* import data from './Data.json' */\r\n\r\nconst data = [\r\n    {\r\n        \"id\": \"japan\",\r\n        \"color\": \"hsl(46, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 228\r\n            },\r\n            {\r\n                \"x\": \"helicopter\",\r\n                \"y\": 187\r\n            },\r\n            {\r\n                \"x\": \"boat\",\r\n                \"y\": 109\r\n            },\r\n            {\r\n                \"x\": \"train\",\r\n                \"y\": 77\r\n            },\r\n            {\r\n                \"x\": \"subway\",\r\n                \"y\": 225\r\n            },\r\n            {\r\n                \"x\": \"bus\",\r\n                \"y\": 63\r\n            },\r\n            {\r\n                \"x\": \"car\",\r\n                \"y\": 197\r\n            },\r\n            {\r\n                \"x\": \"moto\",\r\n                \"y\": 122\r\n            },\r\n            {\r\n                \"x\": \"bicycle\",\r\n                \"y\": 193\r\n            },\r\n            {\r\n                \"x\": \"horse\",\r\n                \"y\": 245\r\n            },\r\n            {\r\n                \"x\": \"skateboard\",\r\n                \"y\": 93\r\n            },\r\n            {\r\n                \"x\": \"others\",\r\n                \"y\": 84\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"france\",\r\n        \"color\": \"hsl(195, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 30\r\n            },\r\n            {\r\n                \"x\": \"helicopter\",\r\n                \"y\": 212\r\n            },\r\n            {\r\n                \"x\": \"boat\",\r\n                \"y\": 109\r\n            },\r\n            {\r\n                \"x\": \"train\",\r\n                \"y\": 165\r\n            },\r\n            {\r\n                \"x\": \"subway\",\r\n                \"y\": 14\r\n            },\r\n            {\r\n                \"x\": \"bus\",\r\n                \"y\": 77\r\n            },\r\n            {\r\n                \"x\": \"car\",\r\n                \"y\": 94\r\n            },\r\n            {\r\n                \"x\": \"moto\",\r\n                \"y\": 40\r\n            },\r\n            {\r\n                \"x\": \"bicycle\",\r\n                \"y\": 221\r\n            },\r\n            {\r\n                \"x\": \"horse\",\r\n                \"y\": 50\r\n            },\r\n            {\r\n                \"x\": \"skateboard\",\r\n                \"y\": 89\r\n            },\r\n            {\r\n                \"x\": \"others\",\r\n                \"y\": 61\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"us\",\r\n        \"color\": \"hsl(236, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 102\r\n            },\r\n            {\r\n                \"x\": \"helicopter\",\r\n                \"y\": 252\r\n            },\r\n            {\r\n                \"x\": \"boat\",\r\n                \"y\": 181\r\n            },\r\n            {\r\n                \"x\": \"train\",\r\n                \"y\": 6\r\n            },\r\n            {\r\n                \"x\": \"subway\",\r\n                \"y\": 249\r\n            },\r\n            {\r\n                \"x\": \"bus\",\r\n                \"y\": 193\r\n            },\r\n            {\r\n                \"x\": \"car\",\r\n                \"y\": 289\r\n            },\r\n            {\r\n                \"x\": \"moto\",\r\n                \"y\": 88\r\n            },\r\n            {\r\n                \"x\": \"bicycle\",\r\n                \"y\": 182\r\n            },\r\n            {\r\n                \"x\": \"horse\",\r\n                \"y\": 121\r\n            },\r\n            {\r\n                \"x\": \"skateboard\",\r\n                \"y\": 276\r\n            },\r\n            {\r\n                \"x\": \"others\",\r\n                \"y\": 53\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"germany\",\r\n        \"color\": \"hsl(223, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 133\r\n            },\r\n            {\r\n                \"x\": \"helicopter\",\r\n                \"y\": 254\r\n            },\r\n            {\r\n                \"x\": \"boat\",\r\n                \"y\": 97\r\n            },\r\n            {\r\n                \"x\": \"train\",\r\n                \"y\": 5\r\n            },\r\n            {\r\n                \"x\": \"subway\",\r\n                \"y\": 113\r\n            },\r\n            {\r\n                \"x\": \"bus\",\r\n                \"y\": 40\r\n            },\r\n            {\r\n                \"x\": \"car\",\r\n                \"y\": 43\r\n            },\r\n            {\r\n                \"x\": \"moto\",\r\n                \"y\": 79\r\n            },\r\n            {\r\n                \"x\": \"bicycle\",\r\n                \"y\": 101\r\n            },\r\n            {\r\n                \"x\": \"horse\",\r\n                \"y\": 201\r\n            },\r\n            {\r\n                \"x\": \"skateboard\",\r\n                \"y\": 108\r\n            },\r\n            {\r\n                \"x\": \"others\",\r\n                \"y\": 118\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"id\": \"norway\",\r\n        \"color\": \"hsl(326, 70%, 50%)\",\r\n        \"data\": [\r\n            {\r\n                \"x\": \"plane\",\r\n                \"y\": 194\r\n            },\r\n            {\r\n                \"x\": \"helicopter\",\r\n                \"y\": 82\r\n            },\r\n            {\r\n                \"x\": \"boat\",\r\n                \"y\": 119\r\n            },\r\n            {\r\n                \"x\": \"train\",\r\n                \"y\": 202\r\n            },\r\n            {\r\n                \"x\": \"subway\",\r\n                \"y\": 230\r\n            },\r\n            {\r\n                \"x\": \"bus\",\r\n                \"y\": 86\r\n            },\r\n            {\r\n                \"x\": \"car\",\r\n                \"y\": 1\r\n            },\r\n            {\r\n                \"x\": \"moto\",\r\n                \"y\": 99\r\n            },\r\n            {\r\n                \"x\": \"bicycle\",\r\n                \"y\": 249\r\n            },\r\n            {\r\n                \"x\": \"horse\",\r\n                \"y\": 275\r\n            },\r\n            {\r\n                \"x\": \"skateboard\",\r\n                \"y\": 21\r\n            },\r\n            {\r\n                \"x\": \"others\",\r\n                \"y\": 22\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nconst UnitDemand = () => (\r\n    <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 50, right: 110, bottom: 50, left: 60 }}\r\n        xScale={{ type: 'point' }}\r\n        yScale={{ type: 'linear', min: 'auto', max: 'auto', stacked: true, reverse: false }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'transportation',\r\n            legendOffset: 36,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'count',\r\n            legendOffset: -40,\r\n            legendPosition: 'middle'\r\n        }}\r\n        colors={{ scheme: 'nivo' }}\r\n        pointSize={10}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabel=\"y\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={true}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom-right',\r\n                direction: 'column',\r\n                justify: false,\r\n                translateX: 100,\r\n                translateY: 0,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 80,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.75,\r\n                symbolSize: 12,\r\n                symbolShape: 'circle',\r\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n)\r\n\r\nexport default UnitDemand;\r\n"]},"metadata":{},"sourceType":"module"}