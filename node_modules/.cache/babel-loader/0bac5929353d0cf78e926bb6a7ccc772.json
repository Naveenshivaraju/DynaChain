{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\Demand\\\\Components\\\\SankeyChart\\\\SankeyChart.js\";\nimport React from 'react';\nimport { ResponsiveSankey } from '@nivo/sankey';\nimport data from './data.json';\nimport { Card } from 'react-bootstrap';\nconst sankeydata = data.data;\n\nfunction SankeyChart() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '400px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveSankey, {\n    linkContract: 1,\n    data: sankeydata,\n    margin: {\n      top: 40,\n      right: 160,\n      bottom: 40,\n      left: 100\n    },\n    align: \"justify\",\n    sort: \"descending\",\n    colors: {\n      scheme: 'category10'\n    },\n    nodeOpacity: 1,\n    nodeThickness: 18,\n    nodeInnerPadding: 3,\n    nodeSpacing: 24,\n    nodeBorderWidth: 0,\n    nodeBorderColor: {\n      from: 'color',\n      modifiers: [['darker', 0.8]]\n    },\n    linkOpacity: 0.5,\n    linkHoverOthersOpacity: 0.1,\n    enableLinkGradient: true,\n    labelPosition: \"outside\",\n    labelOrientation: \"horizontal\",\n    labelPadding: 16,\n    labelTextColor: {\n      from: 'color',\n      modifiers: [['darker', 1]]\n    },\n    legends: [{\n      anchor: 'bottom-right',\n      direction: 'column',\n      translateX: 130,\n      itemWidth: 100,\n      itemHeight: 14,\n      itemDirection: 'right-to-left',\n      itemsSpacing: 2,\n      itemTextColor: '#999',\n      symbolSize: 14,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemTextColor: '#000'\n        }\n      }]\n    }],\n    nodeTooltip: node => {\n      console.log(\"Node Info\");\n      console.log(node);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          backgroundColor: node.color,\n          opacity: '0.8'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }\n      }, node.id), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 57\n        }\n      }, node.prod_name), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 86\n        }\n      })))));\n    },\n    linkTooltip: link => {\n      console.log(\"Link Info\");\n      console.log(link);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          backgroundColor: link.color,\n          opacity: '0.8'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 49\n        }\n      }, link.source.prod_name), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 53\n        }\n      }, link.source.id, \" \", ' -> ', \" \", link.target.id), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 57\n        }\n      }, \" Weighted Adherence: \", (link.value / 100).toFixed(3)), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 120\n        }\n      })))));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default SankeyChart;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Demand/Components/SankeyChart/SankeyChart.js"],"names":["React","ResponsiveSankey","data","Card","sankeydata","SankeyChart","height","width","top","right","bottom","left","scheme","from","modifiers","anchor","direction","translateX","itemWidth","itemHeight","itemDirection","itemsSpacing","itemTextColor","symbolSize","effects","on","style","node","console","log","backgroundColor","color","opacity","id","prod_name","link","source","target","value","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsiveSankey } from '@nivo/sankey';\r\nimport data from './data.json';\r\nimport { Card } from 'react-bootstrap';\r\n\r\nconst sankeydata = data.data;\r\n\r\nfunction SankeyChart() {\r\n    return (\r\n        <div style={{height:'400px',width:'100%'}}>\r\n            <ResponsiveSankey\r\n                linkContract={1}\r\n                data={sankeydata}\r\n                margin={{ top: 40, right: 160, bottom: 40, left: 100 }}\r\n                align=\"justify\"\r\n                sort=\"descending\"\r\n                colors={{ scheme: 'category10' }}\r\n                nodeOpacity={1}\r\n                nodeThickness={18}\r\n                nodeInnerPadding={3}\r\n                nodeSpacing={24}\r\n                nodeBorderWidth={0}\r\n                nodeBorderColor={{ from: 'color', modifiers: [['darker', 0.8]] }}\r\n                linkOpacity={0.5}\r\n                linkHoverOthersOpacity={0.1}\r\n                enableLinkGradient={true}\r\n                labelPosition=\"outside\"\r\n                labelOrientation=\"horizontal\"\r\n                labelPadding={16}\r\n                labelTextColor={{ from: 'color', modifiers: [['darker', 1]] }}\r\n                legends={[\r\n                    {\r\n                        anchor: 'bottom-right',\r\n                        direction: 'column',\r\n                        translateX: 130,\r\n                        itemWidth: 100,\r\n                        itemHeight: 14,\r\n                        itemDirection: 'right-to-left',\r\n                        itemsSpacing: 2,\r\n                        itemTextColor: '#999',\r\n                        symbolSize: 14,\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemTextColor: '#000'\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n                nodeTooltip={node => {\r\n                                    console.log(\"Node Info\")\r\n                                    console.log(node)\r\n                                    return (\r\n                                        <div>\r\n                                            <Card>\r\n                                                <Card.Header style={{backgroundColor:node.color, opacity:'0.8'}}>{node.id}</Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Card.Title></Card.Title>\r\n                                                    <Card.Text>\r\n                                                        <span>{node.prod_name}</span><br/>\r\n                                                    </Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n                linkTooltip={link => {\r\n                                    console.log(\"Link Info\")\r\n                                    console.log(link)\r\n                                    return (\r\n                                        <div>\r\n                                            <Card>\r\n                                                <Card.Header style={{backgroundColor:link.color, opacity:'0.8'}}>{link.source.prod_name}</Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Card.Title>{link.source.id} {' -> '} {link.target.id}</Card.Title>\r\n                                                    <Card.Text>\r\n                                                        <span> Weighted Adherence: {(link.value/100).toFixed(3)}</span><br/>\r\n                                                    </Card.Text>\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            }\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SankeyChart\r\n"]},"metadata":{},"sourceType":"module"}