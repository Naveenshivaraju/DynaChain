{"ast":null,"code":"var _jsxFileName = \"G:\\\\Companies work\\\\TCS\\\\CCT\\\\DynaChain\\\\src\\\\Inventory\\\\Components\\\\BarChart\\\\BarChart.js\";\nimport React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport data1 from './data1.json';\nimport data2 from './data2.json';\nimport data3 from './data3.json';\nimport data4 from './data4.json';\nimport data5 from './data5.json';\nimport { Card } from 'react-bootstrap';\nimport { MyContext } from '../../MyProvider';\nlet data = null;\nlet dataNumber = 1;\n\nconst BarChart = () => /*#__PURE__*/React.createElement(MyContext.Consumer, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, context => {\n  dataNumber = context.state.dataNumber;\n\n  if (dataNumber === 1) {\n    data = data1;\n  } else if (dataNumber === 2) {\n    data = data2;\n  } else if (dataNumber === 3) {\n    data = data3;\n  } else if (dataNumber === 4) {\n    data = data4;\n  } else {\n    data = data5;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '270px',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveBar, {\n    data: data.bars,\n    keys: ['26W5473_08', '26W5487_08', '26W5479_09', '26W5675_02', '26W5434_04'],\n    indexBy: \"date\",\n    margin: {\n      top: 10,\n      right: 94,\n      bottom: 40,\n      left: 50\n    },\n    padding: 0.25,\n    colors: [\"#19AADE\", \"#1DE4BD\", \"#77f0d2\", \"#c7f9ee\", \"#e4fcf6\"],\n    label: d => `${d.value}`,\n    borderWidth: 0.6,\n    borderColor: {\n      from: 'color',\n      modifiers: [['darker', 1.6]]\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0\n      /*  legend: 'Date(Mon DD, YY)',\r\n       legendPosition: 'middle',\r\n       legendOffset: 32 */\n\n    },\n    axisLeft: {\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'Total Expiration Date Volume',\n      legendPosition: 'middle',\n      legendOffset: -43\n    },\n    labelSkipWidth: 20,\n    labelSkipHeight: 12,\n    labelTextColor: {\n      from: 'white',\n      modifiers: [['darker', 2]]\n    },\n    legends: [{\n      dataFrom: 'keys',\n      anchor: 'bottom-right',\n      direction: 'column',\n      justify: false,\n      translateX: 90,\n      translateY: 5,\n      itemsSpacing: 1.5,\n      itemWidth: 80,\n      itemHeight: 20,\n      itemDirection: 'left-to-right',\n      itemOpacity: 0.8,\n      symbolSize: 11,\n      effects: [{\n        on: 'hover',\n        style: {\n          itemOpacity: 1\n        }\n      }]\n    }],\n    tooltip: function (tooltipdata) {\n      {\n        console.log(tooltipdata);\n      }\n      return /*#__PURE__*/React.createElement(Card, {\n        style: {\n          width: '14rem',\n          borderColor: tooltipdata.color + ''\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          backgroundColor: tooltipdata.color + ''\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, tooltipdata.id), /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }\n      }, \"Units: \", tooltipdata.value), /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }\n      }, \"Avg. Unit Cost: \", tooltipdata.index), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 81\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 33\n        }\n      }, \"Total Cost: \", tooltipdata.indexValue), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 82\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 33\n        }\n      }, \"Demand Before Exp.:\", tooltipdata.value), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 84\n        }\n      }))));\n    },\n    animate: true,\n    motionStiffness: 90,\n    motionDamping: 15\n    /* enableGridY={true}\r\n    gridYValues={[100,200,300,400,500,600]} */\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }));\n});\n\nexport default BarChart;","map":{"version":3,"sources":["G:/Companies work/TCS/CCT/DynaChain/src/Inventory/Components/BarChart/BarChart.js"],"names":["React","ResponsiveBar","data1","data2","data3","data4","data5","Card","MyContext","data","dataNumber","BarChart","context","state","height","width","bars","top","right","bottom","left","d","value","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","tooltipdata","console","log","borderColor","color","backgroundColor","id","index","indexValue"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport data1 from './data1.json'\r\nimport data2 from './data2.json';\r\nimport data3 from './data3.json';\r\nimport data4 from './data4.json';\r\nimport data5 from './data5.json';\r\nimport { Card } from 'react-bootstrap';\r\nimport { MyContext } from '../../MyProvider';\r\n\r\n\r\nlet data=null;\r\nlet dataNumber = 1;\r\n\r\nconst BarChart = () => (\r\n\r\n    <MyContext.Consumer>\r\n        { (context) => {\r\n            dataNumber = context.state.dataNumber;\r\n            if(dataNumber === 1)\r\n            {\r\n                data=data1;\r\n            }\r\n            else if (dataNumber === 2) {\r\n                data=data2;\r\n            }\r\n            else if (dataNumber === 3) {\r\n                data=data3;\r\n            }\r\n            else if (dataNumber === 4) {\r\n                data=data4;\r\n            }\r\n            else {\r\n                data=data5;\r\n\r\n            }\r\n        return (\r\n        <div style={{ height: '270px', width: '100%' }}>\r\n        <ResponsiveBar\r\n            data={data.bars}\r\n            keys={['26W5473_08', '26W5487_08', '26W5479_09', '26W5675_02', '26W5434_04']}\r\n            indexBy=\"date\"\r\n            margin={{ top: 10, right: 94, bottom: 40, left: 50 }}\r\n            padding={0.25}\r\n            colors={[\"#19AADE\",\"#1DE4BD\",\"#77f0d2\",\"#c7f9ee\",\"#e4fcf6\"]}\r\n            label={d => `${d.value}`}\r\n\r\n            borderWidth={0.6}\r\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n            axisTop={null}\r\n            axisRight={null}\r\n            axisBottom={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n               /*  legend: 'Date(Mon DD, YY)',\r\n                legendPosition: 'middle',\r\n                legendOffset: 32 */\r\n            }}\r\n\r\n            axisLeft={{\r\n                tickSize: 5,\r\n                tickPadding: 5,\r\n                tickRotation: 0,\r\n                legend: 'Total Expiration Date Volume',\r\n                legendPosition: 'middle',\r\n                legendOffset: -43\r\n            }}\r\n            labelSkipWidth={20}\r\n            labelSkipHeight={12}\r\n            labelTextColor={{ from: 'white', modifiers: [['darker', 2]] }}\r\n            legends={[\r\n                {\r\n                    dataFrom: 'keys',\r\n                    anchor: 'bottom-right',\r\n                    direction: 'column',\r\n                    justify: false,\r\n                    translateX: 90,\r\n                    translateY: 5,\r\n                    itemsSpacing: 1.5,\r\n                    itemWidth: 80,\r\n                    itemHeight: 20,\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 0.8,\r\n                    symbolSize: 11,\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemOpacity: 1\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n            tooltip={function (tooltipdata) {\r\n\r\n                {console.log(tooltipdata)}\r\n                return <Card style={{ width: '14rem', borderColor: tooltipdata.color + ''}}>\r\n                        <Card.Header style={{backgroundColor: tooltipdata.color + ''}} >{tooltipdata.id}</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Title>Units: {tooltipdata.value}</Card.Title>\r\n                            <Card.Text>\r\n                                <span>Avg. Unit Cost: {tooltipdata.index}</span><br/>\r\n                                <span>Total Cost: {tooltipdata.indexValue}</span><br/>\r\n                                <span>Demand Before Exp.:{tooltipdata.value}</span><br/>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                   \r\n            }}\r\n            animate={true}\r\n            motionStiffness={90}\r\n            motionDamping={15}\r\n            /* enableGridY={true}\r\n            gridYValues={[100,200,300,400,500,600]} */\r\n        />\r\n    </div>\r\n        )}}\r\n        </MyContext.Consumer>\r\n)\r\n\r\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}