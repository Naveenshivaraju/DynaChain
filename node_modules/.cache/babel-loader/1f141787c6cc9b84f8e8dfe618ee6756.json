{"ast":null,"code":"import React from'react';import{ResponsiveBar}from'@nivo/bar';import data1 from'./data1.json';import data2 from'./data2.json';import data3 from'./data3.json';import data4 from'./data4.json';import data5 from'./data5.json';import{Card}from'react-bootstrap';import{MyContext}from'../../MyProvider';var data=null;var dataNumber=1;var BarChart=function BarChart(){return/*#__PURE__*/React.createElement(MyContext.Consumer,null,function(context){dataNumber=context.state.dataNumber;if(dataNumber==1){data=data1;}else if(dataNumber==2){data=data2;}else if(dataNumber==3){data=data3;}else if(dataNumber==4){data=data4;}else{data=data5;}return/*#__PURE__*/React.createElement(\"div\",{style:{height:'270px',width:'100%'}},/*#__PURE__*/React.createElement(ResponsiveBar,{data:data.bars,keys:['26W5473_08','26W5487_08','26W5479_09','26W5675_02','26W5434_04'],indexBy:\"date\",margin:{top:10,right:94,bottom:40,left:50},padding:0.25,colors:[\"#19AADE\",\"#1DE4BD\",\"#77f0d2\",\"#c7f9ee\",\"#e4fcf6\"]/* label={d => `${d.id}`} */,borderWidth:0.6,borderColor:{from:'color',modifiers:[['darker',1.6]]},axisTop:null,axisRight:null,axisBottom:{tickSize:5,tickPadding:5,tickRotation:0/*  legend: 'Date(Mon DD, YY)',\n                legendPosition: 'middle',\n                legendOffset: 32 */},axisLeft:{tickSize:5,tickPadding:5,tickRotation:0,legend:'Total Expiration Date Volume',legendPosition:'middle',legendOffset:-40},labelSkipWidth:20,labelSkipHeight:12,labelTextColor:{from:'white',modifiers:[['darker',2]]},legends:[{dataFrom:'keys',anchor:'bottom-right',direction:'column',justify:false,translateX:90,translateY:5,itemsSpacing:1.5,itemWidth:80,itemHeight:20,itemDirection:'left-to-right',itemOpacity:0.8,symbolSize:11,effects:[{on:'hover',style:{itemOpacity:1}}]}],tooltip:function tooltip(tooltipdata){return/*#__PURE__*/React.createElement(Card,{style:{width:'14rem',borderColor:tooltipdata.color+''}},/*#__PURE__*/React.createElement(Card.Header,{style:{backgroundColor:tooltipdata.color+''}},tooltipdata.id),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Units: \",tooltipdata.value),/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(\"span\",null,\"Avg. Unit Cost: \",tooltipdata.index),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,\"Total Cost: \",tooltipdata.indexValue),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"span\",null,\"Demand Before Exp.:\",tooltipdata.value),/*#__PURE__*/React.createElement(\"br\",null))));/*  {console.log(tooltipdata.data)} */},animate:true,motionStiffness:90,motionDamping:15/* enableGridY={true}\n            gridYValues={[100,200,300,400,500,600]} */}));});};export default BarChart;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Components/BarChart/BarChart.js"],"names":["React","ResponsiveBar","data1","data2","data3","data4","data5","Card","MyContext","data","dataNumber","BarChart","context","state","height","width","bars","top","right","bottom","left","from","modifiers","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","tooltipdata","borderColor","color","backgroundColor","id","value","index","indexValue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ResponsiveBar } from '@nivo/bar';\nimport data1 from './data1.json'\nimport data2 from './data2.json';\nimport data3 from './data3.json';\nimport data4 from './data4.json';\nimport data5 from './data5.json';\nimport { Card } from 'react-bootstrap';\nimport { MyContext } from '../../MyProvider';\n\n\nlet data=null;\nlet dataNumber = 1;\n\nconst BarChart = () => (\n\n    <MyContext.Consumer>\n        { (context) => {\n            dataNumber = context.state.dataNumber;\n            if(dataNumber == 1)\n            {\n                data=data1;\n            }\n            else if (dataNumber == 2) {\n                data=data2;\n            }\n            else if (dataNumber == 3) {\n                data=data3;\n            }\n            else if (dataNumber == 4) {\n                data=data4;\n            }\n            else {\n                data=data5;\n\n            }\n        return (\n        <div style={{ height: '270px', width: '100%' }}>\n        <ResponsiveBar\n            data={data.bars}\n            keys={['26W5473_08', '26W5487_08', '26W5479_09', '26W5675_02', '26W5434_04']}\n            indexBy=\"date\"\n            margin={{ top: 10, right: 94, bottom: 40, left: 50 }}\n            padding={0.25}\n            colors={[\"#19AADE\",\"#1DE4BD\",\"#77f0d2\",\"#c7f9ee\",\"#e4fcf6\"]}\n            /* label={d => `${d.id}`} */\n\n            borderWidth={0.6}\n            borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\n            axisTop={null}\n            axisRight={null}\n            axisBottom={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n               /*  legend: 'Date(Mon DD, YY)',\n                legendPosition: 'middle',\n                legendOffset: 32 */\n            }}\n\n            axisLeft={{\n                tickSize: 5,\n                tickPadding: 5,\n                tickRotation: 0,\n                legend: 'Total Expiration Date Volume',\n                legendPosition: 'middle',\n                legendOffset: -40\n            }}\n            labelSkipWidth={20}\n            labelSkipHeight={12}\n            labelTextColor={{ from: 'white', modifiers: [['darker', 2]] }}\n            legends={[\n                {\n                    dataFrom: 'keys',\n                    anchor: 'bottom-right',\n                    direction: 'column',\n                    justify: false,\n                    translateX: 90,\n                    translateY: 5,\n                    itemsSpacing: 1.5,\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemDirection: 'left-to-right',\n                    itemOpacity: 0.8,\n                    symbolSize: 11,\n                    effects: [\n                        {\n                            on: 'hover',\n                            style: {\n                                itemOpacity: 1\n                            }\n                        }\n                    ]\n                }\n            ]}\n            tooltip={function (tooltipdata) {\n\n                return <Card style={{ width: '14rem', borderColor: tooltipdata.color + ''}}>\n                        <Card.Header style={{backgroundColor: tooltipdata.color + ''}} >{tooltipdata.id}</Card.Header>\n                        <Card.Body>\n                            <Card.Title>Units: {tooltipdata.value}</Card.Title>\n                            <Card.Text>\n                                <span>Avg. Unit Cost: {tooltipdata.index}</span><br/>\n                                <span>Total Cost: {tooltipdata.indexValue}</span><br/>\n                                <span>Demand Before Exp.:{tooltipdata.value}</span><br/>\n                            </Card.Text>\n                        </Card.Body>\n                    </Card>\n                   /*  {console.log(tooltipdata.data)} */\n            }}\n            animate={true}\n            motionStiffness={90}\n            motionDamping={15}\n            /* enableGridY={true}\n            gridYValues={[100,200,300,400,500,600]} */\n        />\n    </div>\n        )}}\n        </MyContext.Consumer>\n)\n\nexport default BarChart;"]},"metadata":{},"sourceType":"module"}