{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\Demand\\\\Components\\\\AdjustedDemand\\\\AdjustedDemand.js\";\nimport React, { Component } from \"react\";\nimport Chart from \"react-apexcharts\";\n\nclass AdjustedDemand extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      series: [{\n        name: 'Volume',\n        type: 'column',\n        data: [15000, 0, 80000, 45000, 60000, 50000, 35000, 55000, 62000, 48000, 38000, 46000, null, null, null, null, null, null, null, null, null, null, null, null]\n      }, {\n        name: \"Promoted\",\n        type: \"column\",\n        data: [12000, 50000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, null, null, null, null, null]\n      }, {\n        name: 'Actuals',\n        type: 'line',\n        data: [800, 1290, 1500, 1000, 1240, 1450, 1500, 1300, 1600, 1570, 1850, 1208, null, null, null, null, null, null, null, null, null, null, null, null]\n      }, {\n        name: 'Forcast',\n        type: 'line',\n        data: [null, null, null, null, null, null, null, null, null, null, null, 1208, 800, 1290, 1500, 1000, 1240, 1450, 1500, 1300, 1600, 1570, 1850, 1208]\n      }, {\n        name: 'Upper Bound',\n        type: 'line',\n        data: [null, null, null, null, null, null, null, null, null, null, null, 1208, 900, 1490, 1550, 1200, 1240, 1480, 1580, 1390, 1700, 1600, 1750, 1308]\n      }, {\n        name: 'Lower Bound',\n        type: 'line',\n        data: [null, null, null, null, null, null, null, null, null, null, null, 1208, 750, 1210, 1400, 800, 1140, 1350, 1450, 1250, 1460, 1500, 1800, 1108]\n      }],\n      options: {\n        chart: {\n          height: 350,\n          type: 'line',\n          stacked: false\n        },\n        dataLabels: {\n          enabled: false\n        },\n        stroke: {\n          width: [3, 3, 3, 3, 1, 1],\n          curve: [null, null, \"smooth\", \"smooth\", \"smooth\", \"smooth\"]\n        },\n        title: {\n          text: 'Adjusted Demand (2014 Jan - 2014 Dec)',\n          align: 'left',\n          offsetX: 70,\n          offsetY: 0\n        },\n        colors: [\"#008FFB\", \"#00E396\", \"#FEB019\", \"#1e306a\", \"#3b8004\", \"#e62e2d\"],\n        markers: {\n          size: [null, null, 4, 4, 3, 3],\n          hover: {\n            size: [null, null, 4, 4, 3, 3],\n            sizeOffset: 3\n          }\n        },\n        annotations: {\n          xaxis: [{\n            x: \"2015 Jan\",\n            strokeDashArray: 0,\n            strokeWidth: 4,\n            borderColor: '#b0413e',\n            label: {\n              style: {\n                color: '#fff',\n                background: '#b0413e',\n                align: 'right'\n              },\n              text: 'Present Date'\n            }\n          }]\n        },\n        xaxis: {\n          categories: [\"2014 Jan\", \"2014 Feb\", \"2014 Mar\", \"2014 Apr\", \"2014 May\", \"2014 Jun\", \"2014 Jul\", \"2014 Aug\", \"2014 Sep\", \"2014 Oct\", \"2014 Nov\", \"2014 Dec\", \"2015 Jan\", \"2015 Feb\", \"2015 Mar\", \"2015 Apr\", \"2015 May\", \"2015 Jun\", \"2015 Jul\", \"2015 Aug\", \"2015 Sep\", \"2015 Oct\", \"2015 Nov\", \"2015 Dec\"],\n          labels: {\n            show: true,\n            rotate: -45,\n            rotateAlways: false,\n            hideOverlappingLabels: true,\n            showDuplicates: false,\n            trim: false,\n            minHeight: undefined,\n            maxHeight: 120,\n            style: {\n              colors: [],\n              fontSize: '12px',\n              fontFamily: 'Helvetica, Arial, sans-serif',\n              fontWeight: 400,\n              cssClass: 'apexcharts-xaxis-label'\n            }\n          },\n          tooltip: {\n            enabled: false\n          }\n        },\n        yaxis: [{\n          /* seriesName: 'Volume', */\n          min: 0,\n          max: 60000,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#5e6564'\n          },\n          labels: {\n            style: {\n              colors: '#5e6564'\n            },\n            formatter: value => {\n              if (value === null) return undefined;else if (value === undefined) return undefined;else return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n          },\n          title: {\n            text: \"Volume\",\n            style: {\n              color: '#5e6564'\n            }\n          },\n          tooltip: {\n            enabled: false\n          }\n        }, {\n          seriesName: 'Promoted',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#00E396'\n          },\n          labels: {\n            style: {\n              colors: '#00E396'\n            },\n            formatter: value => {\n              if (value === null) return undefined;else if (value === undefined) return value;else return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n          },\n          title: {\n            text: \"Promoted\",\n            style: {\n              color: '#00E396'\n            }\n          }\n        }, {\n          seriesName: 'Actuals',\n          opposite: true,\n          axisTicks: {\n            show: true\n          },\n          axisBorder: {\n            show: true,\n            color: '#FEB019'\n          },\n          labels: {\n            style: {\n              colors: '#FEB019'\n            },\n            formatter: value => {\n              if (value === null) return 0;else if (value === undefined) return value;else return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            }\n          },\n          title: {\n            text: \"Actuals\",\n            style: {\n              color: '#FEB019'\n            }\n          }\n        }\n        /* {\r\n            seriesName: 'Forcast',\r\n            opposite: true,\r\n            axisTicks: {\r\n                show: true,\r\n            },\r\n            axisBorder: {\r\n                show: true,\r\n                color: '#e7405e'\r\n            },\r\n            labels: {\r\n                style: {\r\n                    colors: '#e7405e',\r\n                },\r\n                formatter: (value) => { \r\n                    if(value === null)\r\n                    return 0;\r\n                    else if (value === undefined)\r\n                    return value;\r\n                    else\r\n                    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");  \r\n                },\r\n            },\r\n            title: {\r\n                text: \"Forcast\",\r\n                style: {\r\n                    color: '#e7405e',\r\n                }\r\n            },\r\n        }, */\n        ],\n        tooltip: {\n          x: {\n            show: true,\n            format: 'dd MMM',\n            formatter: undefined\n          },\n          y: {\n            formatter: undefined,\n            title: {\n              formatter: seriesName => seriesName\n            }\n          },\n          z: {\n            formatter: undefined,\n            title: 'Size: '\n          },\n          fixed: {\n            enabled: false,\n            position: 'topRight',\n            // topRight, topLeft, bottomRight, bottomLeft\n            offsetY: 30,\n            offsetX: 60\n          }\n        },\n        legend: {\n          horizontalAlign: 'left',\n          offsetX: 40\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"AdjustedDemand\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mixed-chart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Chart, {\n      options: this.state.options,\n      series: this.state.series,\n      type: \"line\",\n      width: \"950px\",\n      height: \"500px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\n\nexport default AdjustedDemand;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Demand/Components/AdjustedDemand/AdjustedDemand.js"],"names":["React","Component","Chart","AdjustedDemand","constructor","props","state","series","name","type","data","options","chart","height","stacked","dataLabels","enabled","stroke","width","curve","title","text","align","offsetX","offsetY","colors","markers","size","hover","sizeOffset","annotations","xaxis","x","strokeDashArray","strokeWidth","borderColor","label","style","color","background","categories","labels","show","rotate","rotateAlways","hideOverlappingLabels","showDuplicates","trim","minHeight","undefined","maxHeight","fontSize","fontFamily","fontWeight","cssClass","tooltip","yaxis","min","max","axisTicks","axisBorder","formatter","value","toString","replace","seriesName","opposite","format","y","z","fixed","position","legend","horizontalAlign","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nclass AdjustedDemand extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            series: [\r\n                {\r\n                    name: 'Volume',\r\n                    type: 'column',\r\n                    data: [15000, 0, 80000, 45000, 60000, 50000, 35000, 55000, 62000, 48000, 38000, 46000, null, null, null, null, null, null, null, null, null, null, null, null]\r\n                },\r\n                {\r\n                    name: \"Promoted\",\r\n                    type: \"column\",\r\n                    data: [12000, 50000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, null, null, null, null, null, null, null, null, null, null, null, null]\r\n                },\r\n                {\r\n                    name: 'Actuals',\r\n                    type: 'line',\r\n                    data: [800, 1290, 1500, 1000, 1240, 1450, 1500, 1300, 1600, 1570, 1850, 1208, null, null, null, null, null, null, null, null, null, null, null, null ]\r\n                },\r\n                {\r\n                    name: 'Forcast',\r\n                    type: 'line',\r\n                    data: [null, null, null, null, null, null, null, null, null, null, null, 1208, 800, 1290, 1500, 1000, 1240, 1450, 1500, 1300, 1600, 1570, 1850, 1208]\r\n                },\r\n                {\r\n                    name: 'Upper Bound',\r\n                    type: 'line',\r\n                    data: [null, null, null, null, null, null, null, null, null, null, null, 1208, 900, 1490, 1550, 1200, 1240, 1480, 1580, 1390, 1700, 1600, 1750, 1308]\r\n                },\r\n                {\r\n                    name: 'Lower Bound',\r\n                    type: 'line',\r\n                    data: [null, null, null, null, null, null, null, null, null, null, null, 1208, 750, 1210, 1400, 800, 1140, 1350, 1450, 1250, 1460, 1500, 1800, 1108]\r\n                }\r\n            ],\r\n\r\n\r\n            options: {\r\n                chart: {\r\n                    height: 350,\r\n                    type: 'line',\r\n                    stacked: false\r\n                },\r\n                dataLabels: {\r\n                    enabled: false\r\n                },\r\n                stroke: {\r\n                    width: [3, 3, 3, 3, 1, 1],\r\n                    curve: [null,null,\"smooth\",\"smooth\",\"smooth\",\"smooth\"]\r\n                },\r\n                title: {\r\n                    text: 'Adjusted Demand (2014 Jan - 2014 Dec)',\r\n                    align: 'left',\r\n                    offsetX: 70,\r\n                    offsetY: 0\r\n                },\r\n                colors: [\r\n                    \"#008FFB\",\r\n                    \"#00E396\",\r\n                    \"#FEB019\",\r\n                    \"#1e306a\",\r\n                    \"#3b8004\",\r\n                    \"#e62e2d\",\r\n                  ],\r\n                markers: {\r\n                    size: [null,null,4,4,3,3],\r\n                    hover: {\r\n                        size: [null,null,4,4,3,3],\r\n                        sizeOffset: 3\r\n                      }\r\n                },\r\n                annotations: {\r\n                    xaxis: [\r\n                      {\r\n                        x: \"2015 Jan\",\r\n                        strokeDashArray: 0,\r\n                        strokeWidth:4,\r\n                        borderColor: '#b0413e',\r\n                        label: {\r\n                          style: {\r\n                            color: '#fff',\r\n                            background: '#b0413e',\r\n                            align: 'right',\r\n                          },\r\n                          text: 'Present Date'\r\n                        }\r\n                      }\r\n                    ]\r\n                  },\r\n\r\n                xaxis: {\r\n                    categories: [\"2014 Jan\", \"2014 Feb\", \"2014 Mar\", \"2014 Apr\", \"2014 May\", \"2014 Jun\", \"2014 Jul\", \"2014 Aug\", \"2014 Sep\", \"2014 Oct\", \"2014 Nov\", \"2014 Dec\",\r\n                    \"2015 Jan\", \"2015 Feb\", \"2015 Mar\", \"2015 Apr\", \"2015 May\", \"2015 Jun\", \"2015 Jul\", \"2015 Aug\", \"2015 Sep\", \"2015 Oct\", \"2015 Nov\", \"2015 Dec\"],\r\n                    labels: {\r\n                        show: true,\r\n                        rotate: -45,\r\n                        rotateAlways: false,\r\n                        hideOverlappingLabels: true,\r\n                        showDuplicates: false,\r\n                        trim: false,\r\n                        minHeight: undefined,\r\n                        maxHeight: 120,\r\n                        style: {\r\n                            colors: [],\r\n                            fontSize: '12px',\r\n                            fontFamily: 'Helvetica, Arial, sans-serif',\r\n                            fontWeight: 400,\r\n                            cssClass: 'apexcharts-xaxis-label',\r\n                        }\r\n                    },\r\n                    tooltip: {\r\n                        enabled: false\r\n                    }\r\n                },\r\n                yaxis: [\r\n                    {\r\n                        /* seriesName: 'Volume', */\r\n                        min: 0,\r\n                        max: 60000,\r\n                        axisTicks: {\r\n                            show: true,\r\n                        },\r\n                        axisBorder: {\r\n                            show: true,\r\n                            color: '#5e6564'\r\n                        },\r\n                        labels: {\r\n                            style: {\r\n                                colors: '#5e6564',\r\n                            },\r\n                            formatter: (value) => { \r\n                                if(value === null)\r\n                                    return undefined;\r\n                                else if (value === undefined)\r\n                                    return undefined;\r\n                                else\r\n                                    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); \r\n                            },\r\n                        },\r\n                        title: {\r\n                            text: \"Volume\",\r\n                            style: {\r\n                                color: '#5e6564'\r\n                            }\r\n                        },\r\n                        tooltip: {\r\n                            enabled: false\r\n                        }\r\n                    },\r\n                    {\r\n                        seriesName: 'Promoted',\r\n                        opposite: true,\r\n                        axisTicks: {\r\n                            show: true,\r\n                        },\r\n                        axisBorder: {\r\n                            show: true,\r\n                            color: '#00E396'\r\n                        },\r\n                        labels: {\r\n                            style: {\r\n                                colors: '#00E396',\r\n                            },\r\n                            formatter: (value) => { \r\n                                if(value === null)\r\n                                    return undefined;\r\n                                else if (value === undefined)\r\n                                    return value;\r\n                                else\r\n                                    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); \r\n                            },\r\n                        },\r\n                        title: {\r\n                            text: \"Promoted\",\r\n                            style: {\r\n                                color: '#00E396',\r\n                            }\r\n                        },\r\n                    },\r\n                    {\r\n                        seriesName: 'Actuals',\r\n                        opposite: true,\r\n                        axisTicks: {\r\n                            show: true,\r\n                        },\r\n                        axisBorder: {\r\n                            show: true,\r\n                            color: '#FEB019'\r\n                        },\r\n                        labels: {\r\n                            style: {\r\n                                colors: '#FEB019',\r\n                            },\r\n                            formatter: (value) => { \r\n                                if(value === null)\r\n                                    return 0;\r\n                                else if (value === undefined)\r\n                                    return value;\r\n                                else\r\n                                    return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");  \r\n                            },\r\n                        },\r\n                        title: {\r\n                            text: \"Actuals\",\r\n                            style: {\r\n                                color: '#FEB019',\r\n                            }\r\n                        },\r\n                    },\r\n                    /* {\r\n                        seriesName: 'Forcast',\r\n                        opposite: true,\r\n                        axisTicks: {\r\n                            show: true,\r\n                        },\r\n                        axisBorder: {\r\n                            show: true,\r\n                            color: '#e7405e'\r\n                        },\r\n                        labels: {\r\n                            style: {\r\n                                colors: '#e7405e',\r\n                            },\r\n                            formatter: (value) => { \r\n                                if(value === null)\r\n                                return 0;\r\n                                else if (value === undefined)\r\n                                return value;\r\n                                else\r\n                                return value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");  \r\n                            },\r\n                        },\r\n                        title: {\r\n                            text: \"Forcast\",\r\n                            style: {\r\n                                color: '#e7405e',\r\n                            }\r\n                        },\r\n                    }, */\r\n                ],\r\n                tooltip: {\r\n                    x: {\r\n                        show: true,\r\n                        format: 'dd MMM',\r\n                        formatter: undefined,\r\n                    },\r\n                    y: {\r\n                        formatter: undefined,\r\n                        title: {\r\n                            formatter: (seriesName) => seriesName,\r\n                        },\r\n                    },\r\n                    z: {\r\n                        formatter: undefined,\r\n                        title: 'Size: '\r\n                    },\r\n                    fixed: {\r\n                        enabled: false,\r\n                        position: 'topRight', // topRight, topLeft, bottomRight, bottomLeft\r\n                        offsetY: 30,\r\n                        offsetX: 60\r\n                    },\r\n                },\r\n                legend: {\r\n                    horizontalAlign: 'left',\r\n                    offsetX: 40\r\n                }\r\n            },\r\n\r\n\r\n        };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"AdjustedDemand\">\r\n                <div className=\"row\">\r\n                    <div className=\"mixed-chart\">\r\n                        <Chart\r\n                            options={this.state.options}\r\n                            series={this.state.series}\r\n                            type=\"line\"\r\n                            width=\"950px\"\r\n                            height=\"500px\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdjustedDemand;"]},"metadata":{},"sourceType":"module"}