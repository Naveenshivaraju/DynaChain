{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport Footer from './Components/Footer/Footer';\nimport Inventory from './Inventory/Inventory';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleButtonClickHandler = () => {\n      let new_isOpen = '';\n\n      if (this.state.isOpen == '') {\n        new_isOpen = 'open';\n      } else {\n        new_isOpen = '';\n      }\n\n      this.setState({\n        isOpen: new_isOpen\n      });\n      this.setState(prevState => {\n        console.log(\"Event occured and method ran.\");\n        return {\n          sideBarOpen: !prevState.sideBarOpen\n        };\n      });\n    };\n\n    this.state = {\n      sideBarOpen: false,\n      wrapperDiv: 'wrapper',\n      pageContentDive: 'page-content-wrapper',\n      sideBarDiv: 'sidebar-wrapper',\n      index: 0,\n      isOpen: ''\n    };\n  }\n\n  render() {\n    let sideBar = null;\n    let wrapperDiv = 'wrapper';\n    let pageContentDiv = 'page-content-wrapper';\n    let sideBarWrapper = 'sidebar-wrapper';\n\n    if (this.state.sideBarOpen) {\n      sideBar = /*#__PURE__*/React.createElement(Sidebar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      });\n      wrapperDiv = 'wrapper-active';\n      pageContentDiv = 'page-content-wrapper-active';\n      sideBarWrapper = 'sidebar-wrapper-active';\n      console.log(\"inside if.\");\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: wrapperDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, sideBar, /*#__PURE__*/React.createElement(\"div\", {\n      className: pageContentDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid p-0 px-lg-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      sideBarClickHandler: this.toggleButtonClickHandler,\n      isOpen: this.state.isOpen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Inventory, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }))), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/App.js"],"names":["React","Component","Navbar","Footer","Inventory","BrowserRouter","Router","Switch","Route","App","constructor","props","toggleButtonClickHandler","new_isOpen","state","isOpen","setState","prevState","console","log","sideBarOpen","wrapperDiv","pageContentDive","sideBarDiv","index","render","sideBar","pageContentDiv","sideBarWrapper"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AAEA,OAAO,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAGjCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAarBC,wBAbqB,GAaM,MAAM;AAE/B,UAAIC,UAAU,GAAG,EAAjB;;AACA,UAAI,KAAKC,KAAL,CAAWC,MAAX,IAAqB,EAAzB,EAA6B;AAC3BF,QAAAA,UAAU,GAAG,MAAb;AACD,OAFD,MAGK;AACHA,QAAAA,UAAU,GAAG,EAAb;AACD;;AAED,WAAKG,QAAL,CAAc;AACZD,QAAAA,MAAM,EAAEF;AADI,OAAd;AAIA,WAAKG,QAAL,CAAeC,SAAD,IAAe;AAC3BC,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,eAAO;AAAEC,UAAAA,WAAW,EAAE,CAACH,SAAS,CAACG;AAA1B,SAAP;AACD,OAHD;AAID,KA/BoB;;AAGjB,SAAKN,KAAL,GAAa;AACbM,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,UAAU,EAAE,SAFC;AAGbC,MAAAA,eAAe,EAAE,sBAHJ;AAIbC,MAAAA,UAAU,EAAE,iBAJC;AAKbC,MAAAA,KAAK,EAAE,CALM;AAMbT,MAAAA,MAAM,EAAE;AANK,KAAb;AAQH;;AAsBCU,EAAAA,MAAM,GAAG;AAEP,QAAIC,OAAO,GAAG,IAAd;AACA,QAAIL,UAAU,GAAG,SAAjB;AACA,QAAIM,cAAc,GAAG,sBAArB;AACA,QAAIC,cAAc,GAAG,iBAArB;;AAEA,QAAI,KAAKd,KAAL,CAAWM,WAAf,EAA4B;AAC1BM,MAAAA,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AACAL,MAAAA,UAAU,GAAG,gBAAb;AACAM,MAAAA,cAAc,GAAG,6BAAjB;AACAC,MAAAA,cAAc,GAAG,wBAAjB;AACAV,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD;;AACD,wBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEE,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,OADH,eAEE;AAAK,MAAA,SAAS,EAAEC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,mBAAmB,EAAE,KAAKf,wBAAlC;AAA4D,MAAA,MAAM,EAAE,KAAKE,KAAL,CAAWC,MAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,eAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CAFF,CADF,eAaE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CADF,CADF;AAuBD;;AAzEgC;AA4EnC,eAAeN,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar/Navbar';\nimport Footer from './Components/Footer/Footer';\nimport Inventory from './Inventory/Inventory'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nexport class App extends Component {\n\n  \n  constructor(props) {\n    super(props)\n\n    this.state = {\n    sideBarOpen: false,\n    wrapperDiv: 'wrapper',\n    pageContentDive: 'page-content-wrapper',\n    sideBarDiv: 'sidebar-wrapper',\n    index: 0,\n    isOpen: ''\n  }\n}\n\ntoggleButtonClickHandler = () => {\n\n  let new_isOpen = '';\n  if (this.state.isOpen == '') {\n    new_isOpen = 'open';\n  }\n  else {\n    new_isOpen = '';\n  }\n\n  this.setState({\n    isOpen: new_isOpen\n  })\n\n  this.setState((prevState) => {\n    console.log(\"Event occured and method ran.\");\n    return { sideBarOpen: !prevState.sideBarOpen };\n  })\n}\n\n  render() {\n    \n    let sideBar = null;\n    let wrapperDiv = 'wrapper';\n    let pageContentDiv = 'page-content-wrapper';\n    let sideBarWrapper = 'sidebar-wrapper';\n\n    if (this.state.sideBarOpen) {\n      sideBar = <Sidebar />;\n      wrapperDiv = 'wrapper-active';\n      pageContentDiv = 'page-content-wrapper-active';\n      sideBarWrapper = 'sidebar-wrapper-active';\n      console.log(\"inside if.\");\n    }\n    return (\n      <>\n        <Router>\n          <div className={wrapperDiv}>\n            {sideBar}\n            <div className={pageContentDiv}>\n              <div className=\"content\">\n                <div className=\"container-fluid p-0 px-lg-0\">\n                  <Navbar sideBarClickHandler={this.toggleButtonClickHandler} isOpen={this.state.isOpen} />\n                  <Inventory />\n                </div>\n              </div>\n              <Footer />\n            </div>\n          </div>\n          <Switch>\n            {/* <Route path='/' exact component={Home} />\n          <Route path='/reports' component={Reports} />\n          <Route path='/products' component={Products} /> */}\n          </Switch>\n        </Router>\n      </>\n    )\n  }\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}