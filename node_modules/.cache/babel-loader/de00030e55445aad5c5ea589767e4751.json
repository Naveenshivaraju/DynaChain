{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\Demand\\\\Components\\\\TimeAnalysis\\\\TimeAnalysis.js\";\nimport React from 'react';\nimport { ResponsiveLine } from '@nivo/line';\nimport data from './Data.json';\nconst chartdata = data.data;\nconst styleById = {\n  cognac: {\n    strokeDasharray: '12, 6',\n    strokeWidth: 2\n  },\n  \"Data Line 1\": {\n    /* strokeDasharray: '1, 16', */\n    strokeWidth: 4\n    /*   strokeLinejoin: 'round',\r\n      strokeLinecap: 'round', */\n\n  },\n  \"Data Line 3\": {\n    strokeDasharray: '6, 6',\n    strokeWidth: 1\n  },\n  default: {\n    strokeWidth: 2\n  }\n};\n\nfunction TimeAnalysis() {\n  const DashedLine = ({\n    series,\n    lineGenerator,\n    xScale,\n    yScale\n  }) => {\n    return series.map(({\n      id,\n      data,\n      color\n    }) => /*#__PURE__*/React.createElement(\"path\", {\n      key: id,\n      d: lineGenerator(data.map(d => ({\n        x: xScale(d.data.x),\n        y: yScale(d.data.y)\n      }))),\n      fill: \"none\",\n      stroke: color,\n      style: styleById[id] || styleById.default,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '500px',\n      width: '800px',\n      marginLeft: '290px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveLine, {\n    data: chartdata,\n    margin: {\n      top: 50,\n      right: 110,\n      bottom: 120,\n      left: 100\n    },\n    xScale: {\n      type: 'point',\n      min: 0,\n      max: 'auto',\n      stacked: false,\n      reverse: false\n    },\n    yScale: {\n      type: 'linear',\n      min: 0,\n      max: 'auto',\n      stacked: false,\n      reverse: false\n    },\n    axisTop: null,\n    axisRight: null,\n    axisBottom: {\n      orient: 'bottom',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: -90,\n\n      /*  legend: 'transportation', */\n      legendOffset: 100,\n      legendPosition: 'middle'\n    },\n    axisLeft: {\n      orient: 'left',\n      tickSize: 5,\n      tickPadding: 5,\n      tickRotation: 0,\n      legend: 'Vertical Label',\n      legendOffset: -70,\n      legendPosition: 'middle'\n    },\n    colors: [\"#4e7ac4\", \"red\", \"#1e306a\", \"green\"],\n    pointSize: 4,\n    pointColor: {\n      theme: 'background'\n    },\n    pointBorderWidth: 2,\n    pointBorderColor: {\n      from: 'serieColor'\n    },\n    pointLabel: \"y\",\n    pointLabelYOffset: -12,\n    useMesh: false,\n    enableCrosshair: true,\n    crosshairType: \"x\",\n    enableSlices: \"x\",\n    sliceTooltip: ({\n      slice\n    }) => {\n      /*   console.log(slice) */\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          background: 'white',\n          padding: '9px 12px',\n          border: '1px solid #ccc'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, \"Date: \", slice.points[0].data.x), slice.points.map(point => /*#__PURE__*/React.createElement(\"div\", {\n        key: point.id,\n        style: {\n          color: point.serieColor,\n          padding: '3px 0'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }\n      }, point.serieId, \" \"), \": \", point.data.yFormatted.toLocaleString())));\n    },\n    layers: ['grid', 'markers', 'areas', DashedLine, 'slices', 'points', 'axes', 'legends'],\n    legends: [{\n      anchor: 'bottom',\n      direction: 'row',\n      justify: false,\n      translateX: 0,\n      translateY: 102,\n      itemsSpacing: 0,\n      itemDirection: 'left-to-right',\n      itemWidth: 105,\n      itemHeight: 20,\n      itemOpacity: 0.8,\n      symbolSize: 12,\n      symbolShape: 'square',\n      symbolBorderColor: 'rgba(0, 0, 0, .5)',\n      effects: [{\n        on: 'hover',\n        style: {\n          itemBackground: 'rgba(0, 0, 0, .03)',\n          itemOpacity: 1\n        }\n      }]\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default TimeAnalysis;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/Demand/Components/TimeAnalysis/TimeAnalysis.js"],"names":["React","ResponsiveLine","data","chartdata","styleById","cognac","strokeDasharray","strokeWidth","default","TimeAnalysis","DashedLine","series","lineGenerator","xScale","yScale","map","id","color","d","x","y","height","width","marginLeft","top","right","bottom","left","type","min","max","stacked","reverse","orient","tickSize","tickPadding","tickRotation","legendOffset","legendPosition","legend","theme","from","slice","background","padding","border","points","point","serieColor","serieId","yFormatted","toLocaleString","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","symbolBorderColor","effects","on","style","itemBackground"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport data from './Data.json';\r\n\r\nconst chartdata = data.data\r\n\r\nconst styleById = {\r\n    cognac: {\r\n        strokeDasharray: '12, 6',\r\n        strokeWidth: 2,\r\n    },\r\n    \"Data Line 1\": {\r\n        /* strokeDasharray: '1, 16', */\r\n        strokeWidth: 4,\r\n      /*   strokeLinejoin: 'round',\r\n        strokeLinecap: 'round', */\r\n    },\r\n    \"Data Line 3\": {\r\n        strokeDasharray: '6, 6',\r\n        strokeWidth: 1,\r\n    },\r\n    default: {\r\n        strokeWidth: 2,\r\n    },\r\n}\r\n\r\n\r\nfunction TimeAnalysis() {\r\n    \r\n    const DashedLine = ({ series, lineGenerator, xScale, yScale }) => {\r\n        return series.map(({ id, data, color }) => (\r\n            <path\r\n                key={id}\r\n                d={lineGenerator(\r\n                    data.map(d => ({\r\n                        x: xScale(d.data.x),\r\n                        y: yScale(d.data.y),\r\n                    }))\r\n                )}\r\n                fill=\"none\"\r\n                stroke={color}\r\n                style={styleById[id] || styleById.default}\r\n            />\r\n        ))\r\n    }\r\n    \r\n    return (\r\n        <div style={{height:'500px', width:'800px', marginLeft: '290px'}}>\r\n    <ResponsiveLine\r\n       \r\n        data={chartdata}\r\n        margin={{ top: 50, right: 110, bottom: 120, left: 100 }}\r\n        xScale={{  type: 'point', min: 0, max: 'auto', stacked: false, reverse: false  }}\r\n        yScale={{ type: 'linear', min: 0, max: 'auto', stacked: false, reverse: false }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisBottom={{\r\n            orient: 'bottom',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: -90,\r\n           /*  legend: 'transportation', */\r\n            legendOffset: 100,\r\n            legendPosition: 'middle'\r\n        }}\r\n        axisLeft={{\r\n            orient: 'left',\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: 'Vertical Label',\r\n            legendOffset: -70,\r\n            legendPosition: 'middle'\r\n        }}\r\n        colors={[\"#4e7ac4\",\"red\",\"#1e306a\",\"green\"]}\r\n        pointSize={4}\r\n        pointColor={{ theme: 'background' }}\r\n        pointBorderWidth={2}\r\n        pointBorderColor={{ from: 'serieColor' }}\r\n        pointLabel=\"y\"\r\n        pointLabelYOffset={-12}\r\n        useMesh={false}\r\n        enableCrosshair={true}\r\n        crosshairType=\"x\"\r\n        enableSlices=\"x\"\r\n        sliceTooltip={({ slice }) => {\r\n          /*   console.log(slice) */\r\n            return (\r\n                <div\r\n                    style={{\r\n                        background: 'white',\r\n                        padding: '9px 12px',\r\n                        border: '1px solid #ccc',\r\n                    }}\r\n                >\r\n                    <div>Date: {slice.points[0].data.x}</div>\r\n                    {slice.points.map(point => (\r\n                        <div\r\n                            key={point.id}\r\n                            style={{\r\n                                color: point.serieColor,\r\n                                padding: '3px 0',\r\n                            }}\r\n                        >\r\n                            <span>{point.serieId} </span>: {point.data.yFormatted.toLocaleString()}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )\r\n        }}\r\n        layers={['grid', 'markers', 'areas', DashedLine, 'slices', 'points', 'axes', 'legends']}\r\n        legends={[\r\n            {\r\n                anchor: 'bottom',\r\n                direction: 'row',\r\n                justify: false,\r\n                translateX: 0,\r\n                translateY: 102,\r\n                itemsSpacing: 0,\r\n                itemDirection: 'left-to-right',\r\n                itemWidth: 105,\r\n                itemHeight: 20,\r\n                itemOpacity: 0.8,\r\n                symbolSize: 12,\r\n                symbolShape: 'square',\r\n                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                effects: [\r\n                    {\r\n                        on: 'hover',\r\n                        style: {\r\n                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                            itemOpacity: 1\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ]}\r\n    />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimeAnalysis\r\n"]},"metadata":{},"sourceType":"module"}