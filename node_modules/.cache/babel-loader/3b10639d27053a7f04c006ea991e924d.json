{"ast":null,"code":"import _uniq from 'lodash/uniq';\nimport React, { useState, useMemo, memo, useCallback, Fragment } from 'react';\nimport { blendModePropType, motionPropTypes, noop, useTheme, getLabelGenerator, useMotionConfig, useAnimatedPath, withContainer, useDimensions, SvgWrapper, ResponsiveWrapper } from '@nivo/core';\nimport { LegendPropShape, BoxLegendSvg } from '@nivo/legends';\nimport PropTypes from 'prop-types';\nimport { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight, sankey } from 'd3-sankey';\nimport { ordinalColorsPropType, inheritedColorPropType, useOrdinalColorScale, useInheritedColor } from '@nivo/colors';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useSpring, animated, useSprings } from 'react-spring';\nimport { useTooltip, BasicTooltip, Chip } from '@nivo/tooltip';\nimport { line, curveMonotoneX, curveMonotoneY } from 'd3-shape';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar sankeyAlignmentPropMapping = {\n  center: sankeyCenter,\n  justify: sankeyJustify,\n  start: sankeyLeft,\n  end: sankeyRight\n};\nvar sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping);\nvar sankeyAlignmentPropType = PropTypes.oneOf(sankeyAlignmentPropKeys);\n\nvar sankeyAlignmentFromProp = function sankeyAlignmentFromProp(prop) {\n  return sankeyAlignmentPropMapping[prop];\n};\n\nvar SankeyPropTypes = _objectSpread2({\n  data: PropTypes.shape({\n    nodes: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n    })).isRequired,\n    links: PropTypes.arrayOf(PropTypes.shape({\n      source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n      target: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n    })).isRequired\n  }).isRequired,\n  layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  align: sankeyAlignmentPropType.isRequired,\n  sort: PropTypes.oneOfType([PropTypes.oneOf(['auto', 'input', 'ascending', 'descending']), PropTypes.func]).isRequired,\n  colors: ordinalColorsPropType.isRequired,\n  nodeOpacity: PropTypes.number.isRequired,\n  nodeHoverOpacity: PropTypes.number.isRequired,\n  nodeHoverOthersOpacity: PropTypes.number.isRequired,\n  nodeThickness: PropTypes.number.isRequired,\n  nodeSpacing: PropTypes.number.isRequired,\n  nodeInnerPadding: PropTypes.number.isRequired,\n  nodeBorderWidth: PropTypes.number.isRequired,\n  nodeBorderColor: inheritedColorPropType,\n  linkOpacity: PropTypes.number.isRequired,\n  linkHoverOpacity: PropTypes.number.isRequired,\n  linkHoverOthersOpacity: PropTypes.number.isRequired,\n  linkContract: PropTypes.number.isRequired,\n  linkBlendMode: blendModePropType.isRequired,\n  enableLinkGradient: PropTypes.bool.isRequired,\n  enableLabels: PropTypes.bool.isRequired,\n  labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n  labelPadding: PropTypes.number.isRequired,\n  labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  labelTextColor: inheritedColorPropType,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n  labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  nodeTooltip: PropTypes.func,\n  linkTooltip: PropTypes.func,\n  isInteractive: PropTypes.bool.isRequired,\n  onClick: PropTypes.func.isRequired,\n  tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n  layers: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.oneOf(['links', 'nodes', 'labels', 'legends']), PropTypes.func])).isRequired,\n  role: PropTypes.string.isRequired\n}, motionPropTypes);\n\nvar SankeyDefaultProps = {\n  layout: 'horizontal',\n  align: 'center',\n  sort: 'auto',\n  colors: {\n    scheme: 'nivo'\n  },\n  nodeOpacity: 0.75,\n  nodeHoverOpacity: 1,\n  nodeHoverOthersOpacity: 0.15,\n  nodeThickness: 12,\n  nodeSpacing: 12,\n  nodeInnerPadding: 0,\n  nodeBorderWidth: 1,\n  nodeBorderColor: {\n    from: 'color',\n    modifiers: [['darker', 0.5]]\n  },\n  linkOpacity: 0.25,\n  linkHoverOpacity: 0.6,\n  linkHoverOthersOpacity: 0.15,\n  linkContract: 0,\n  linkBlendMode: 'multiply',\n  enableLinkGradient: false,\n  enableLabels: true,\n  label: 'id',\n  labelPosition: 'inside',\n  labelPadding: 9,\n  labelOrientation: 'horizontal',\n  labelTextColor: {\n    from: 'color',\n    modifiers: [['darker', 0.8]]\n  },\n  isInteractive: true,\n  onClick: noop,\n  legends: [],\n  layers: ['links', 'nodes', 'labels', 'legends'],\n  role: 'img',\n  animate: true,\n  motionConfig: 'gentle'\n};\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar getId = function getId(d) {\n  return d.id;\n};\n\nvar computeNodeAndLinks = function computeNodeAndLinks(_ref) {\n  var _data = _ref.data,\n      layout = _ref.layout,\n      alignFunction = _ref.alignFunction,\n      sortFunction = _ref.sortFunction,\n      linkSortMode = _ref.linkSortMode,\n      nodeThickness = _ref.nodeThickness,\n      nodeSpacing = _ref.nodeSpacing,\n      nodeInnerPadding = _ref.nodeInnerPadding,\n      width = _ref.width,\n      height = _ref.height,\n      getColor = _ref.getColor,\n      getLinkColor = _ref.getLinkColor,\n      getLabel = _ref.getLabel;\n  var sankey$1 = sankey().nodeAlign(alignFunction).nodeSort(sortFunction).linkSort(linkSortMode).nodeWidth(nodeThickness).nodePadding(nodeSpacing).size(layout === 'horizontal' ? [width, height] : [height, width]).nodeId(getId);\n\n  var data = _cloneDeep(_data);\n\n  sankey$1(data);\n  data.nodes.forEach(function (node) {\n    node.color = getColor(node);\n    node.label = getLabel(node);\n\n    if (layout === 'horizontal') {\n      node.x = node.x0 + nodeInnerPadding;\n      node.y = node.y0;\n      node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0);\n      node.height = Math.max(node.y1 - node.y0, 0);\n    } else {\n      node.x = node.y0;\n      node.y = node.x0 + nodeInnerPadding;\n      node.width = Math.max(node.y1 - node.y0, 0);\n      node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0);\n      var oldX0 = node.x0;\n      var oldX1 = node.x1;\n      node.x0 = node.y0;\n      node.x1 = node.y1;\n      node.y0 = oldX0;\n      node.y1 = oldX1;\n    }\n  });\n  data.links.forEach(function (link) {\n    link.color = getLinkColor(link);\n    link.pos0 = link.y0;\n    link.pos1 = link.y1;\n    link.thickness = link.width;\n    delete link.y0;\n    delete link.y1;\n    delete link.width;\n  });\n  return data;\n};\n\nvar useSankey = function useSankey(_ref2) {\n  var data = _ref2.data,\n      layout = _ref2.layout,\n      width = _ref2.width,\n      height = _ref2.height,\n      sort = _ref2.sort,\n      align = _ref2.align,\n      colors = _ref2.colors,\n      nodeThickness = _ref2.nodeThickness,\n      nodeSpacing = _ref2.nodeSpacing,\n      nodeInnerPadding = _ref2.nodeInnerPadding,\n      nodeBorderColor = _ref2.nodeBorderColor,\n      label = _ref2.label,\n      labelFormat = _ref2.labelFormat,\n      labelTextColor = _ref2.labelTextColor;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentNode = _useState2[0],\n      setCurrentNode = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentLink = _useState4[0],\n      setCurrentLink = _useState4[1];\n\n  var sortFunction = useMemo(function () {\n    if (sort === 'auto') return undefined;\n    if (sort === 'input') return null;\n    if (sort === 'ascending') return function (a, b) {\n      return a.value - b.value;\n    };\n    if (sort === 'descending') return function (a, b) {\n      return b.value - a.value;\n    };\n    return sort;\n  }, [sort]);\n  var linkSortMode = sort === 'input' ? null : undefined;\n  var alignFunction = useMemo(function () {\n    return sankeyAlignmentFromProp(align);\n  }, [align]);\n  var theme = useTheme();\n  var getColor = useOrdinalColorScale(colors, 'id');\n  var getNodeBorderColor = useInheritedColor(nodeBorderColor, theme);\n  var getLinkColor = useOrdinalColorScale(colors, 'source.id');\n  var getLabel = useMemo(function () {\n    return getLabelGenerator(label, labelFormat);\n  }, [label, labelFormat]);\n  var getLabelTextColor = useInheritedColor(labelTextColor, theme);\n\n  var _useMemo = useMemo(function () {\n    return computeNodeAndLinks({\n      data: data,\n      layout: layout,\n      alignFunction: alignFunction,\n      sortFunction: sortFunction,\n      linkSortMode: linkSortMode,\n      nodeThickness: nodeThickness,\n      nodeSpacing: nodeSpacing,\n      nodeInnerPadding: nodeInnerPadding,\n      width: width,\n      height: height,\n      getColor: getColor,\n      getLinkColor: getLinkColor,\n      getLabel: getLabel\n    });\n  }, [data, layout, alignFunction, sortFunction, linkSortMode, nodeThickness, nodeSpacing, nodeInnerPadding, width, height, getColor, getLinkColor, getLabel]),\n      nodes = _useMemo.nodes,\n      links = _useMemo.links;\n\n  var legendData = useMemo(function () {\n    return nodes.map(function (node) {\n      return {\n        id: node.id,\n        label: node.label,\n        color: node.color\n      };\n    });\n  }, [nodes]);\n  return {\n    nodes: nodes,\n    links: links,\n    legendData: legendData,\n    getNodeBorderColor: getNodeBorderColor,\n    currentNode: currentNode,\n    setCurrentNode: setCurrentNode,\n    currentLink: currentLink,\n    setCurrentLink: setCurrentLink,\n    getLabelTextColor: getLabelTextColor\n  };\n};\n\nvar SankeyNodesItem = function SankeyNodesItem(_ref) {\n  var node = _ref.node,\n      x = _ref.x,\n      y = _ref.y,\n      width = _ref.width,\n      height = _ref.height,\n      color = _ref.color,\n      opacity = _ref.opacity,\n      borderWidth = _ref.borderWidth,\n      borderColor = _ref.borderColor,\n      setCurrent = _ref.setCurrent,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltip = _ref.tooltip;\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedProps = useSpring({\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    opacity: opacity,\n    color: color,\n    config: springConfig,\n    immediate: !animate\n  });\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var tooltipContent = useMemo(function () {\n    if (tooltip) {\n      return React.createElement(BasicTooltip, {\n        id: tooltip(node),\n        enableChip: false\n      });\n    }\n\n    return React.createElement(BasicTooltip, {\n      id: node.label,\n      enableChip: true,\n      color: node.color\n    });\n  }, [tooltip, node]);\n  var handleMouseEnter = useCallback(function (event) {\n    setCurrent(node);\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [setCurrent, node, showTooltipFromEvent, tooltipContent]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [showTooltipFromEvent, tooltipContent]);\n  var handleMouseLeave = useCallback(function () {\n    setCurrent(null);\n    hideTooltip();\n  }, [setCurrent, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    onClick(node, event);\n  }, [onClick, node]);\n  return React.createElement(animated.rect, {\n    x: animatedProps.x,\n    y: animatedProps.y,\n    width: animatedProps.width.interpolate(function (v) {\n      return Math.max(v, 0);\n    }),\n    height: animatedProps.height.interpolate(function (v) {\n      return Math.max(v, 0);\n    }),\n    fill: animatedProps.color,\n    fillOpacity: animatedProps.opacity,\n    strokeWidth: borderWidth,\n    stroke: borderColor,\n    strokeOpacity: opacity,\n    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n    onMouseMove: isInteractive ? handleMouseMove : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined\n  });\n};\n\nvar SankeyNodesItem$1 = memo(SankeyNodesItem);\n\nvar SankeyNodes = function SankeyNodes(_ref) {\n  var nodes = _ref.nodes,\n      nodeOpacity = _ref.nodeOpacity,\n      nodeHoverOpacity = _ref.nodeHoverOpacity,\n      nodeHoverOthersOpacity = _ref.nodeHoverOthersOpacity,\n      nodeBorderWidth = _ref.nodeBorderWidth,\n      getNodeBorderColor = _ref.getNodeBorderColor,\n      setCurrentNode = _ref.setCurrentNode,\n      currentNode = _ref.currentNode,\n      currentLink = _ref.currentLink,\n      isCurrentNode = _ref.isCurrentNode,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltip = _ref.tooltip;\n\n  var getOpacity = function getOpacity(node) {\n    if (!currentNode && !currentLink) return nodeOpacity;\n    if (isCurrentNode(node)) return nodeHoverOpacity;\n    return nodeHoverOthersOpacity;\n  };\n\n  return nodes.map(function (node) {\n    return React.createElement(SankeyNodesItem$1, {\n      key: node.id,\n      node: node,\n      x: node.x,\n      y: node.y,\n      width: node.width,\n      height: node.height,\n      color: node.color,\n      opacity: getOpacity(node),\n      borderWidth: nodeBorderWidth,\n      borderColor: getNodeBorderColor(node),\n      setCurrent: setCurrentNode,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: tooltip\n    });\n  });\n};\n\nvar SankeyNodes$1 = memo(SankeyNodes);\nvar SankeyLinkGradient = memo(function (_ref) {\n  var id = _ref.id,\n      layout = _ref.layout,\n      startColor = _ref.startColor,\n      endColor = _ref.endColor;\n  var gradientProps = {};\n\n  if (layout === 'horizontal') {\n    gradientProps.x1 = '0%';\n    gradientProps.x2 = '100%';\n    gradientProps.y1 = '0%';\n    gradientProps.y2 = '0%';\n  } else {\n    gradientProps.x1 = '0%';\n    gradientProps.x2 = '0%';\n    gradientProps.y1 = '0%';\n    gradientProps.y2 = '100%';\n  }\n\n  return React.createElement(\"linearGradient\", Object.assign({\n    id: id,\n    spreadMethod: \"pad\"\n  }, gradientProps), React.createElement(\"stop\", {\n    offset: \"0%\",\n    stopColor: startColor\n  }), React.createElement(\"stop\", {\n    offset: \"100%\",\n    stopColor: endColor\n  }));\n});\nSankeyLinkGradient.displayName = 'SankeyLinkGradient';\nvar tooltipStyles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  sourceChip: {\n    marginRight: 7\n  },\n  targetChip: {\n    marginLeft: 7,\n    marginRight: 7\n  }\n};\n\nvar TooltipContent = function TooltipContent(_ref) {\n  var link = _ref.link,\n      format = _ref.format;\n  return React.createElement(\"span\", {\n    style: tooltipStyles.container\n  }, React.createElement(Chip, {\n    color: link.source.color,\n    style: tooltipStyles.sourceChip\n  }), React.createElement(\"strong\", null, link.source.label), ' > ', React.createElement(\"strong\", null, link.target.label), React.createElement(Chip, {\n    color: link.target.color,\n    style: tooltipStyles.targetChip\n  }), React.createElement(\"strong\", null, format ? format(link.value) : link.value));\n};\n\nvar SankeyLinksItem = function SankeyLinksItem(_ref2) {\n  var link = _ref2.link,\n      layout = _ref2.layout,\n      path = _ref2.path,\n      color = _ref2.color,\n      opacity = _ref2.opacity,\n      blendMode = _ref2.blendMode,\n      enableGradient = _ref2.enableGradient,\n      setCurrent = _ref2.setCurrent,\n      tooltip = _ref2.tooltip,\n      tooltipFormat = _ref2.tooltipFormat,\n      isInteractive = _ref2.isInteractive,\n      onClick = _ref2.onClick;\n  var linkId = \"\".concat(link.source.id, \".\").concat(link.target.id);\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var animatedPath = useAnimatedPath(path);\n  var animatedProps = useSpring({\n    color: color,\n    opacity: opacity,\n    config: springConfig,\n    immediate: !animate\n  });\n\n  var _useTooltip = useTooltip(),\n      showTooltipFromEvent = _useTooltip.showTooltipFromEvent,\n      hideTooltip = _useTooltip.hideTooltip;\n\n  var tooltipContent = useMemo(function () {\n    if (tooltip) {\n      return React.createElement(BasicTooltip, {\n        id: tooltip(link),\n        enableChip: false\n      });\n    }\n\n    return React.createElement(BasicTooltip, {\n      id: React.createElement(TooltipContent, {\n        format: tooltipFormat,\n        link: link\n      })\n    });\n  }, [tooltip, tooltipFormat, link]);\n  var handleMouseEnter = useCallback(function (event) {\n    setCurrent(link);\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [setCurrent, link, showTooltipFromEvent, tooltipContent]);\n  var handleMouseMove = useCallback(function (event) {\n    showTooltipFromEvent(tooltipContent, event, 'left');\n  }, [showTooltipFromEvent, tooltipContent]);\n  var handleMouseLeave = useCallback(function () {\n    setCurrent(null);\n    hideTooltip();\n  }, [setCurrent, hideTooltip]);\n  var handleClick = useCallback(function (event) {\n    onClick(link, event);\n  }, [onClick, link]);\n  return React.createElement(React.Fragment, null, enableGradient && React.createElement(SankeyLinkGradient, {\n    id: linkId,\n    layout: layout,\n    startColor: link.startColor || link.source.color,\n    endColor: link.endColor || link.target.color\n  }), React.createElement(animated.path, {\n    fill: enableGradient ? \"url(\\\"#\".concat(encodeURI(linkId), \"\\\")\") : animatedProps.color,\n    d: animatedPath,\n    fillOpacity: animatedProps.opacity,\n    onMouseEnter: isInteractive ? handleMouseEnter : undefined,\n    onMouseMove: isInteractive ? handleMouseMove : undefined,\n    onMouseLeave: isInteractive ? handleMouseLeave : undefined,\n    onClick: isInteractive ? handleClick : undefined,\n    style: {\n      mixBlendMode: blendMode\n    }\n  }));\n};\n\nvar SankeyLinksItem$1 = memo(SankeyLinksItem);\n\nvar sankeyLinkHorizontal = function sankeyLinkHorizontal() {\n  var lineGenerator = line().curve(curveMonotoneX);\n  return function (n, contract) {\n    var thickness = Math.max(1, n.thickness - contract * 2);\n    var halfThickness = thickness / 2;\n    var linkLength = n.target.x0 - n.source.x1;\n    var padLength = linkLength * 0.12;\n    var dots = [[n.source.x1, n.pos0 - halfThickness], [n.source.x1 + padLength, n.pos0 - halfThickness], [n.target.x0 - padLength, n.pos1 - halfThickness], [n.target.x0, n.pos1 - halfThickness], [n.target.x0, n.pos1 + halfThickness], [n.target.x0 - padLength, n.pos1 + halfThickness], [n.source.x1 + padLength, n.pos0 + halfThickness], [n.source.x1, n.pos0 + halfThickness], [n.source.x1, n.pos0 - halfThickness]];\n    return lineGenerator(dots) + 'Z';\n  };\n};\n\nvar sankeyLinkVertical = function sankeyLinkVertical() {\n  var lineGenerator = line().curve(curveMonotoneY);\n  return function (n, contract) {\n    var thickness = Math.max(1, n.thickness - contract * 2);\n    var halfThickness = thickness / 2;\n    var linkLength = n.target.y0 - n.source.y1;\n    var padLength = linkLength * 0.12;\n    var dots = [[n.pos0 + halfThickness, n.source.y1], [n.pos0 + halfThickness, n.source.y1 + padLength], [n.pos1 + halfThickness, n.target.y0 - padLength], [n.pos1 + halfThickness, n.target.y0], [n.pos1 - halfThickness, n.target.y0], [n.pos1 - halfThickness, n.target.y0 - padLength], [n.pos0 - halfThickness, n.source.y1 + padLength], [n.pos0 - halfThickness, n.source.y1], [n.pos0 + halfThickness, n.source.y1]];\n    return lineGenerator(dots) + 'Z';\n  };\n};\n\nvar SankeyLinks = function SankeyLinks(_ref) {\n  var links = _ref.links,\n      layout = _ref.layout,\n      linkOpacity = _ref.linkOpacity,\n      linkHoverOpacity = _ref.linkHoverOpacity,\n      linkHoverOthersOpacity = _ref.linkHoverOthersOpacity,\n      linkContract = _ref.linkContract,\n      linkBlendMode = _ref.linkBlendMode,\n      enableLinkGradient = _ref.enableLinkGradient,\n      setCurrentLink = _ref.setCurrentLink,\n      currentNode = _ref.currentNode,\n      currentLink = _ref.currentLink,\n      isCurrentLink = _ref.isCurrentLink,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      tooltip = _ref.tooltip;\n\n  var getOpacity = function getOpacity(link) {\n    if (!currentNode && !currentLink) return linkOpacity;\n    if (isCurrentLink(link)) return linkHoverOpacity;\n    return linkHoverOthersOpacity;\n  };\n\n  var getLinkPath = layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical();\n  return links.map(function (link) {\n    return React.createElement(SankeyLinksItem$1, {\n      key: \"\".concat(link.source.id, \".\").concat(link.target.id),\n      link: link,\n      layout: layout,\n      path: getLinkPath(link, linkContract),\n      color: link.color,\n      opacity: getOpacity(link),\n      blendMode: linkBlendMode,\n      enableGradient: enableLinkGradient,\n      setCurrent: setCurrentLink,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: tooltip,\n      tooltipFormat: tooltipFormat\n    });\n  });\n};\n\nvar SankeyLinks$1 = memo(SankeyLinks);\n\nvar SankeyLabels = function SankeyLabels(_ref) {\n  var nodes = _ref.nodes,\n      layout = _ref.layout,\n      width = _ref.width,\n      height = _ref.height,\n      labelPosition = _ref.labelPosition,\n      labelPadding = _ref.labelPadding,\n      labelOrientation = _ref.labelOrientation,\n      getLabelTextColor = _ref.getLabelTextColor;\n  var theme = useTheme();\n  var labelRotation = labelOrientation === 'vertical' ? -90 : 0;\n  var labels = nodes.map(function (node) {\n    var x;\n    var y;\n    var textAnchor;\n\n    if (layout === 'horizontal') {\n      y = node.y + node.height / 2;\n\n      if (node.x < width / 2) {\n        if (labelPosition === 'inside') {\n          x = node.x1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start';\n        } else {\n          x = node.x - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end';\n        }\n      } else {\n        if (labelPosition === 'inside') {\n          x = node.x - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end';\n        } else {\n          x = node.x1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start';\n        }\n      }\n    } else if (layout === 'vertical') {\n      x = node.x + node.width / 2;\n\n      if (node.y < height / 2) {\n        if (labelPosition === 'inside') {\n          y = node.y1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle';\n        } else {\n          y = node.y - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle';\n        }\n      } else {\n        if (labelPosition === 'inside') {\n          y = node.y - labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle';\n        } else {\n          y = node.y1 + labelPadding;\n          textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle';\n        }\n      }\n    }\n\n    return {\n      id: node.id,\n      label: node.label,\n      x: x,\n      y: y,\n      textAnchor: textAnchor,\n      color: getLabelTextColor(node)\n    };\n  });\n\n  var _useMotionConfig = useMotionConfig(),\n      animate = _useMotionConfig.animate,\n      springConfig = _useMotionConfig.config;\n\n  var springs = useSprings(labels.length, labels.map(function (label) {\n    return {\n      transform: \"translate(\".concat(label.x, \", \").concat(label.y, \") rotate(\").concat(labelRotation, \")\"),\n      color: label.color,\n      config: springConfig,\n      immediate: !animate\n    };\n  }));\n  return springs.map(function (animatedProps, index) {\n    var label = labels[index];\n    return React.createElement(animated.text, {\n      key: label.id,\n      dominantBaseline: \"central\",\n      textAnchor: label.textAnchor,\n      transform: animatedProps.transform,\n      style: _objectSpread2(_objectSpread2({}, theme.labels.text), {}, {\n        fill: animatedProps.color,\n        pointerEvents: 'none'\n      })\n    }, label.label);\n  });\n};\n\nvar SankeyLabels$1 = memo(SankeyLabels);\n\nvar Sankey = function Sankey(_ref) {\n  var data = _ref.data,\n      layout = _ref.layout,\n      sort = _ref.sort,\n      align = _ref.align,\n      width = _ref.width,\n      height = _ref.height,\n      partialMargin = _ref.margin,\n      colors = _ref.colors,\n      nodeThickness = _ref.nodeThickness,\n      nodeSpacing = _ref.nodeSpacing,\n      nodeInnerPadding = _ref.nodeInnerPadding,\n      nodeBorderColor = _ref.nodeBorderColor,\n      nodeOpacity = _ref.nodeOpacity,\n      nodeHoverOpacity = _ref.nodeHoverOpacity,\n      nodeHoverOthersOpacity = _ref.nodeHoverOthersOpacity,\n      nodeBorderWidth = _ref.nodeBorderWidth,\n      linkOpacity = _ref.linkOpacity,\n      linkHoverOpacity = _ref.linkHoverOpacity,\n      linkHoverOthersOpacity = _ref.linkHoverOthersOpacity,\n      linkContract = _ref.linkContract,\n      linkBlendMode = _ref.linkBlendMode,\n      enableLinkGradient = _ref.enableLinkGradient,\n      enableLabels = _ref.enableLabels,\n      labelPosition = _ref.labelPosition,\n      labelPadding = _ref.labelPadding,\n      labelOrientation = _ref.labelOrientation,\n      label = _ref.label,\n      labelFormat = _ref.labelFormat,\n      labelTextColor = _ref.labelTextColor,\n      nodeTooltip = _ref.nodeTooltip,\n      linkTooltip = _ref.linkTooltip,\n      isInteractive = _ref.isInteractive,\n      onClick = _ref.onClick,\n      tooltipFormat = _ref.tooltipFormat,\n      legends = _ref.legends,\n      layers = _ref.layers,\n      role = _ref.role;\n\n  var _useDimensions = useDimensions(width, height, partialMargin),\n      margin = _useDimensions.margin,\n      innerWidth = _useDimensions.innerWidth,\n      innerHeight = _useDimensions.innerHeight,\n      outerWidth = _useDimensions.outerWidth,\n      outerHeight = _useDimensions.outerHeight;\n\n  var _useSankey = useSankey({\n    data: data,\n    layout: layout,\n    width: innerWidth,\n    height: innerHeight,\n    sort: sort,\n    align: align,\n    colors: colors,\n    nodeThickness: nodeThickness,\n    nodeSpacing: nodeSpacing,\n    nodeInnerPadding: nodeInnerPadding,\n    nodeBorderColor: nodeBorderColor,\n    label: label,\n    labelFormat: labelFormat,\n    labelTextColor: labelTextColor\n  }),\n      nodes = _useSankey.nodes,\n      links = _useSankey.links,\n      legendData = _useSankey.legendData,\n      getNodeBorderColor = _useSankey.getNodeBorderColor,\n      currentNode = _useSankey.currentNode,\n      setCurrentNode = _useSankey.setCurrentNode,\n      currentLink = _useSankey.currentLink,\n      setCurrentLink = _useSankey.setCurrentLink,\n      getLabelTextColor = _useSankey.getLabelTextColor;\n\n  var isCurrentNode = function isCurrentNode() {\n    return false;\n  };\n\n  var isCurrentLink = function isCurrentLink() {\n    return false;\n  };\n\n  if (currentLink) {\n    isCurrentNode = function isCurrentNode(_ref2) {\n      var id = _ref2.id;\n      return id === currentLink.source.id || id === currentLink.target.id;\n    };\n\n    isCurrentLink = function isCurrentLink(_ref3) {\n      var source = _ref3.source,\n          target = _ref3.target;\n      return source.id === currentLink.source.id && target.id === currentLink.target.id;\n    };\n  }\n\n  if (currentNode) {\n    var currentNodeIds = [currentNode.id];\n    links.filter(function (_ref4) {\n      var source = _ref4.source,\n          target = _ref4.target;\n      return source.id === currentNode.id || target.id === currentNode.id;\n    }).forEach(function (_ref5) {\n      var source = _ref5.source,\n          target = _ref5.target;\n      currentNodeIds.push(source.id);\n      currentNodeIds.push(target.id);\n    });\n    currentNodeIds = _uniq(currentNodeIds);\n\n    isCurrentNode = function isCurrentNode(_ref6) {\n      var id = _ref6.id;\n      return currentNodeIds.includes(id);\n    };\n\n    isCurrentLink = function isCurrentLink(_ref7) {\n      var source = _ref7.source,\n          target = _ref7.target;\n      return source.id === currentNode.id || target.id === currentNode.id;\n    };\n  }\n\n  var layerProps = {\n    links: links,\n    nodes: nodes,\n    margin: margin,\n    width: width,\n    height: height,\n    outerWidth: outerWidth,\n    outerHeight: outerHeight\n  };\n  var layerById = {\n    links: React.createElement(SankeyLinks$1, {\n      key: \"links\",\n      links: links,\n      layout: layout,\n      linkContract: linkContract,\n      linkOpacity: linkOpacity,\n      linkHoverOpacity: linkHoverOpacity,\n      linkHoverOthersOpacity: linkHoverOthersOpacity,\n      linkBlendMode: linkBlendMode,\n      enableLinkGradient: enableLinkGradient,\n      setCurrentLink: setCurrentLink,\n      currentNode: currentNode,\n      currentLink: currentLink,\n      isCurrentLink: isCurrentLink,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: linkTooltip,\n      tooltipFormat: tooltipFormat\n    }),\n    nodes: React.createElement(SankeyNodes$1, {\n      key: \"nodes\",\n      nodes: nodes,\n      nodeOpacity: nodeOpacity,\n      nodeHoverOpacity: nodeHoverOpacity,\n      nodeHoverOthersOpacity: nodeHoverOthersOpacity,\n      nodeBorderWidth: nodeBorderWidth,\n      getNodeBorderColor: getNodeBorderColor,\n      setCurrentNode: setCurrentNode,\n      currentNode: currentNode,\n      currentLink: currentLink,\n      isCurrentNode: isCurrentNode,\n      isInteractive: isInteractive,\n      onClick: onClick,\n      tooltip: nodeTooltip,\n      tooltipFormat: tooltipFormat\n    }),\n    labels: null,\n    legends: legends.map(function (legend, i) {\n      return React.createElement(BoxLegendSvg, Object.assign({\n        key: \"legend\".concat(i)\n      }, legend, {\n        containerWidth: innerWidth,\n        containerHeight: innerHeight,\n        data: legendData\n      }));\n    })\n  };\n\n  if (enableLabels) {\n    layerById.labels = React.createElement(SankeyLabels$1, {\n      key: \"labels\",\n      nodes: nodes,\n      layout: layout,\n      width: innerWidth,\n      height: innerHeight,\n      labelPosition: labelPosition,\n      labelPadding: labelPadding,\n      labelOrientation: labelOrientation,\n      getLabelTextColor: getLabelTextColor\n    });\n  }\n\n  return React.createElement(SvgWrapper, {\n    width: outerWidth,\n    height: outerHeight,\n    margin: margin,\n    role: role\n  }, layers.map(function (layer, i) {\n    if (typeof layer === 'function') {\n      return React.createElement(Fragment, {\n        key: i\n      }, layer(layerProps));\n    }\n\n    return layerById[layer];\n  }));\n};\n\nvar WrappedSankey = withContainer(Sankey);\nWrappedSankey.defaultProps = SankeyDefaultProps;\n\nvar ResponsiveSankey = function ResponsiveSankey(props) {\n  return React.createElement(ResponsiveWrapper, null, function (_ref) {\n    var width = _ref.width,\n        height = _ref.height;\n    return React.createElement(WrappedSankey, Object.assign({\n      width: width,\n      height: height\n    }, props));\n  });\n};\n\nexport { ResponsiveSankey, WrappedSankey as Sankey, SankeyDefaultProps, SankeyPropTypes, sankeyAlignmentFromProp, sankeyAlignmentPropKeys, sankeyAlignmentPropMapping, sankeyAlignmentPropType };","map":{"version":3,"sources":["../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../src/props.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../src/hooks.js","../src/SankeyNodesItem.js","../src/SankeyNodes.js","../src/SankeyLinkGradient.js","../src/SankeyLinksItem.js","../src/links.js","../src/SankeyLinks.js","../src/SankeyLabels.js","../src/Sankey.js","../src/ResponsiveSankey.js"],"names":["defineProperty","sankeyAlignmentPropMapping","center","justify","start","end","sankeyRight","sankeyAlignmentPropKeys","Object","sankeyAlignmentPropType","PropTypes","sankeyAlignmentFromProp","SankeyPropTypes","data","nodes","id","isRequired","links","source","target","layout","align","sort","colors","ordinalColorsPropType","nodeOpacity","nodeHoverOpacity","nodeHoverOthersOpacity","nodeThickness","nodeSpacing","nodeInnerPadding","nodeBorderWidth","nodeBorderColor","linkOpacity","linkHoverOpacity","linkHoverOthersOpacity","linkContract","linkBlendMode","blendModePropType","enableLinkGradient","enableLabels","labelPosition","labelPadding","labelOrientation","labelTextColor","label","labelFormat","nodeTooltip","linkTooltip","isInteractive","onClick","tooltipFormat","legends","layers","role","SankeyDefaultProps","scheme","from","modifiers","animate","motionConfig","arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","getId","d","computeNodeAndLinks","_data","alignFunction","sortFunction","linkSortMode","width","height","getColor","getLinkColor","getLabel","sankey","d3Sankey","node","Math","oldX0","oldX1","link","useSankey","currentNode","setCurrentNode","useState","currentLink","setCurrentLink","useMemo","a","b","theme","useTheme","useOrdinalColorScale","getNodeBorderColor","useInheritedColor","getLabelGenerator","getLabelTextColor","legendData","color","SankeyNodesItem","x","y","opacity","borderWidth","borderColor","setCurrent","tooltip","springConfig","useMotionConfig","animatedProps","useSpring","config","immediate","showTooltipFromEvent","hideTooltip","useTooltip","tooltipContent","handleMouseEnter","useCallback","handleMouseMove","handleMouseLeave","handleClick","undefined","memo","SankeyNodes","isCurrentNode","getOpacity","SankeyLinkGradient","startColor","endColor","gradientProps","tooltipStyles","container","display","alignItems","sourceChip","marginRight","targetChip","marginLeft","TooltipContent","format","SankeyLinksItem","path","blendMode","enableGradient","linkId","animatedPath","useAnimatedPath","encodeURI","mixBlendMode","sankeyLinkHorizontal","lineGenerator","line","thickness","n","contract","halfThickness","linkLength","padLength","dots","sankeyLinkVertical","SankeyLinks","isCurrentLink","getLinkPath","SankeyLabels","labelRotation","labels","textAnchor","springs","useSprings","transform","fill","pointerEvents","Sankey","margin","partialMargin","innerWidth","innerHeight","outerWidth","outerHeight","useDimensions","currentNodeIds","layerProps","layerById","i","layer","WrappedSankey","withContainer","ResponsiveSankey"],"mappings":"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","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport PropTypes from 'prop-types'\nimport { sankeyCenter, sankeyJustify, sankeyLeft, sankeyRight } from 'd3-sankey'\nimport { noop, blendModePropType, motionPropTypes } from '@nivo/core'\nimport { ordinalColorsPropType, inheritedColorPropType } from '@nivo/colors'\nimport { LegendPropShape } from '@nivo/legends'\n\nexport const sankeyAlignmentPropMapping = {\n    center: sankeyCenter,\n    justify: sankeyJustify,\n    start: sankeyLeft,\n    end: sankeyRight,\n}\n\nexport const sankeyAlignmentPropKeys = Object.keys(sankeyAlignmentPropMapping)\n\nexport const sankeyAlignmentPropType = PropTypes.oneOf(sankeyAlignmentPropKeys)\n\nexport const sankeyAlignmentFromProp = prop => sankeyAlignmentPropMapping[prop]\n\nexport const SankeyPropTypes = {\n    data: PropTypes.shape({\n        nodes: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n        links: PropTypes.arrayOf(\n            PropTypes.shape({\n                source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n                target: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            })\n        ).isRequired,\n    }).isRequired,\n\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    align: sankeyAlignmentPropType.isRequired,\n    sort: PropTypes.oneOfType([\n        PropTypes.oneOf(['auto', 'input', 'ascending', 'descending']),\n        PropTypes.func,\n    ]).isRequired,\n\n    colors: ordinalColorsPropType.isRequired,\n\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeThickness: PropTypes.number.isRequired,\n    nodeSpacing: PropTypes.number.isRequired,\n    nodeInnerPadding: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    nodeBorderColor: inheritedColorPropType,\n\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n\n    enableLabels: PropTypes.bool.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    labelTextColor: inheritedColorPropType,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).isRequired,\n    labelFormat: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n\n    nodeTooltip: PropTypes.func,\n    linkTooltip: PropTypes.func,\n\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n\n    legends: PropTypes.arrayOf(PropTypes.shape(LegendPropShape)).isRequired,\n\n    layers: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n            PropTypes.oneOf(['links', 'nodes', 'labels', 'legends']),\n            PropTypes.func,\n        ])\n    ).isRequired,\n\n    role: PropTypes.string.isRequired,\n\n    ...motionPropTypes,\n}\n\nexport const SankeyDefaultProps = {\n    layout: 'horizontal',\n    align: 'center',\n    sort: 'auto',\n\n    colors: { scheme: 'nivo' },\n\n    nodeOpacity: 0.75,\n    nodeHoverOpacity: 1,\n    nodeHoverOthersOpacity: 0.15,\n    nodeThickness: 12,\n    nodeSpacing: 12,\n    nodeInnerPadding: 0,\n    nodeBorderWidth: 1,\n    nodeBorderColor: { from: 'color', modifiers: [['darker', 0.5]] },\n\n    linkOpacity: 0.25,\n    linkHoverOpacity: 0.6,\n    linkHoverOthersOpacity: 0.15,\n    linkContract: 0,\n    linkBlendMode: 'multiply',\n    enableLinkGradient: false,\n\n    enableLabels: true,\n    label: 'id',\n    labelPosition: 'inside',\n    labelPadding: 9,\n    labelOrientation: 'horizontal',\n    labelTextColor: { from: 'color', modifiers: [['darker', 0.8]] },\n\n    isInteractive: true,\n    onClick: noop,\n\n    legends: [],\n\n    layers: ['links', 'nodes', 'labels', 'legends'],\n\n    role: 'img',\n\n    animate: true,\n    motionConfig: 'gentle',\n}\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import { useState, useMemo } from 'react'\nimport { cloneDeep } from 'lodash'\nimport { sankey as d3Sankey } from 'd3-sankey'\nimport { useTheme, getLabelGenerator } from '@nivo/core'\nimport { useOrdinalColorScale, useInheritedColor } from '@nivo/colors'\nimport { sankeyAlignmentFromProp } from './props'\n\nconst getId = d => d.id\n\nexport const computeNodeAndLinks = ({\n    data: _data,\n    layout,\n    alignFunction,\n    sortFunction,\n    linkSortMode,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    width,\n    height,\n    getColor,\n    getLinkColor,\n    getLabel,\n}) => {\n    const sankey = d3Sankey()\n        .nodeAlign(alignFunction)\n        .nodeSort(sortFunction)\n        .linkSort(linkSortMode)\n        .nodeWidth(nodeThickness)\n        .nodePadding(nodeSpacing)\n        .size(layout === 'horizontal' ? [width, height] : [height, width])\n        .nodeId(getId)\n\n    // deep clone is required as the sankey diagram mutates data\n    // we need a different identity for correct updates\n    const data = cloneDeep(_data)\n    sankey(data)\n\n    data.nodes.forEach(node => {\n        node.color = getColor(node)\n        node.label = getLabel(node)\n        if (layout === 'horizontal') {\n            node.x = node.x0 + nodeInnerPadding\n            node.y = node.y0\n            node.width = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n            node.height = Math.max(node.y1 - node.y0, 0)\n        } else {\n            node.x = node.y0\n            node.y = node.x0 + nodeInnerPadding\n            node.width = Math.max(node.y1 - node.y0, 0)\n            node.height = Math.max(node.x1 - node.x0 - nodeInnerPadding * 2, 0)\n\n            const oldX0 = node.x0\n            const oldX1 = node.x1\n\n            node.x0 = node.y0\n            node.x1 = node.y1\n            node.y0 = oldX0\n            node.y1 = oldX1\n        }\n    })\n\n    data.links.forEach(link => {\n        link.color = getLinkColor(link)\n        link.pos0 = link.y0\n        link.pos1 = link.y1\n        link.thickness = link.width\n        delete link.y0\n        delete link.y1\n        delete link.width\n    })\n\n    return data\n}\n\nexport const useSankey = ({\n    data,\n    layout,\n    width,\n    height,\n    sort,\n    align,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    label,\n    labelFormat,\n    labelTextColor,\n}) => {\n    const [currentNode, setCurrentNode] = useState(null)\n    const [currentLink, setCurrentLink] = useState(null)\n\n    const sortFunction = useMemo(() => {\n        if (sort === 'auto') return undefined\n        if (sort === 'input') return null\n        if (sort === 'ascending') return (a, b) => a.value - b.value\n        if (sort === 'descending') return (a, b) => b.value - a.value\n\n        return sort\n    }, [sort])\n\n    // If \"input\" sorting is used, apply this setting to links, too.\n    // (In d3, `null` means input sorting and `undefined` is the default)\n    const linkSortMode = sort === 'input' ? null : undefined\n\n    const alignFunction = useMemo(() => sankeyAlignmentFromProp(align), [align])\n\n    const theme = useTheme()\n\n    const getColor = useOrdinalColorScale(colors, 'id')\n    const getNodeBorderColor = useInheritedColor(nodeBorderColor, theme)\n    const getLinkColor = useOrdinalColorScale(colors, 'source.id')\n\n    const getLabel = useMemo(() => getLabelGenerator(label, labelFormat), [label, labelFormat])\n    const getLabelTextColor = useInheritedColor(labelTextColor, theme)\n\n    const { nodes, links } = useMemo(\n        () =>\n            computeNodeAndLinks({\n                data,\n                layout,\n                alignFunction,\n                sortFunction,\n                linkSortMode,\n                nodeThickness,\n                nodeSpacing,\n                nodeInnerPadding,\n                width,\n                height,\n                getColor,\n                getLinkColor,\n                getLabel,\n            }),\n        [\n            data,\n            layout,\n            alignFunction,\n            sortFunction,\n            linkSortMode,\n            nodeThickness,\n            nodeSpacing,\n            nodeInnerPadding,\n            width,\n            height,\n            getColor,\n            getLinkColor,\n            getLabel,\n        ]\n    )\n\n    const legendData = useMemo(\n        () =>\n            nodes.map(node => ({\n                id: node.id,\n                label: node.label,\n                color: node.color,\n            })),\n        [nodes]\n    )\n\n    return {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, useTooltip } from '@nivo/tooltip'\n\nconst SankeyNodesItem = ({\n    node,\n    x,\n    y,\n    width,\n    height,\n    color,\n    opacity,\n    borderWidth,\n    borderColor,\n    setCurrent,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedProps = useSpring({\n        x,\n        y,\n        width,\n        height,\n        opacity,\n        color,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(node)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={node.label} enableChip={true} color={node.color} />\n    }, [tooltip, node])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(node)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, node, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(node, event)\n        },\n        [onClick, node]\n    )\n\n    return (\n        <animated.rect\n            x={animatedProps.x}\n            y={animatedProps.y}\n            width={animatedProps.width.interpolate(v => Math.max(v, 0))}\n            height={animatedProps.height.interpolate(v => Math.max(v, 0))}\n            fill={animatedProps.color}\n            fillOpacity={animatedProps.opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            strokeOpacity={opacity}\n            onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n            onMouseMove={isInteractive ? handleMouseMove : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nSankeyNodesItem.propTypes = {\n    node: PropTypes.shape({\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n        color: PropTypes.string.isRequired,\n    }),\n    x: PropTypes.number.isRequired,\n    y: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number.isRequired,\n    borderColor: PropTypes.string.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n}\n\nexport default memo(SankeyNodesItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport SankeyNodesItem from './SankeyNodesItem'\n\nconst SankeyNodes = ({\n    nodes,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    getNodeBorderColor,\n    setCurrentNode,\n    currentNode,\n    currentLink,\n    isCurrentNode,\n    isInteractive,\n    onClick,\n    tooltip,\n}) => {\n    const getOpacity = node => {\n        if (!currentNode && !currentLink) return nodeOpacity\n        if (isCurrentNode(node)) return nodeHoverOpacity\n        return nodeHoverOthersOpacity\n    }\n\n    return nodes.map(node => (\n        <SankeyNodesItem\n            key={node.id}\n            node={node}\n            x={node.x}\n            y={node.y}\n            width={node.width}\n            height={node.height}\n            color={node.color}\n            opacity={getOpacity(node)}\n            borderWidth={nodeBorderWidth}\n            borderColor={getNodeBorderColor(node)}\n            setCurrent={setCurrentNode}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n        />\n    ))\n}\n\nSankeyNodes.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    nodeOpacity: PropTypes.number.isRequired,\n    nodeHoverOpacity: PropTypes.number.isRequired,\n    nodeHoverOthersOpacity: PropTypes.number.isRequired,\n    nodeBorderWidth: PropTypes.number.isRequired,\n    getNodeBorderColor: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentNode: PropTypes.func.isRequired,\n    currentNode: PropTypes.object,\n    currentLink: PropTypes.object,\n    isCurrentNode: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyNodes)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\n\nconst SankeyLinkGradient = memo(({ id, layout, startColor, endColor }) => {\n    const gradientProps = {}\n    if (layout === 'horizontal') {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '100%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '0%'\n    } else {\n        gradientProps.x1 = '0%'\n        gradientProps.x2 = '0%'\n        gradientProps.y1 = '0%'\n        gradientProps.y2 = '100%'\n    }\n\n    return (\n        <linearGradient id={id} spreadMethod=\"pad\" {...gradientProps}>\n            <stop offset=\"0%\" stopColor={startColor} />\n            <stop offset=\"100%\" stopColor={endColor} />\n        </linearGradient>\n    )\n})\n\nSankeyLinkGradient.propTypes = {\n    id: PropTypes.string.isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    startColor: PropTypes.string.isRequired,\n    endColor: PropTypes.string.isRequired,\n}\n\nSankeyLinkGradient.displayName = 'SankeyLinkGradient'\n\nexport default SankeyLinkGradient\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo, useCallback, useMemo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSpring, animated } from 'react-spring'\nimport { blendModePropType, useAnimatedPath, useMotionConfig } from '@nivo/core'\nimport { BasicTooltip, Chip, useTooltip } from '@nivo/tooltip'\nimport SankeyLinkGradient from './SankeyLinkGradient'\n\nconst tooltipStyles = {\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    sourceChip: {\n        marginRight: 7,\n    },\n    targetChip: {\n        marginLeft: 7,\n        marginRight: 7,\n    },\n}\n\nconst TooltipContent = ({ link, format }) => (\n    <span style={tooltipStyles.container}>\n        <Chip color={link.source.color} style={tooltipStyles.sourceChip} />\n        <strong>{link.source.label}</strong>\n        {' > '}\n        <strong>{link.target.label}</strong>\n        <Chip color={link.target.color} style={tooltipStyles.targetChip} />\n        <strong>{format ? format(link.value) : link.value}</strong>\n    </span>\n)\n\nTooltipContent.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n    }).isRequired,\n    format: PropTypes.func,\n}\n\nconst SankeyLinksItem = ({\n    link,\n    layout,\n    path,\n    color,\n    opacity,\n    blendMode,\n    enableGradient,\n    setCurrent,\n    tooltip,\n    tooltipFormat,\n    isInteractive,\n    onClick,\n}) => {\n    const linkId = `${link.source.id}.${link.target.id}`\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const animatedPath = useAnimatedPath(path)\n    const animatedProps = useSpring({\n        color,\n        opacity,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const tooltipContent = useMemo(() => {\n        if (tooltip) {\n            return <BasicTooltip id={tooltip(link)} enableChip={false} />\n        }\n\n        return <BasicTooltip id={<TooltipContent format={tooltipFormat} link={link} />} />\n    }, [tooltip, tooltipFormat, link])\n\n    const handleMouseEnter = useCallback(\n        event => {\n            setCurrent(link)\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [setCurrent, link, showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseMove = useCallback(\n        event => {\n            showTooltipFromEvent(tooltipContent, event, 'left')\n        },\n        [showTooltipFromEvent, tooltipContent]\n    )\n\n    const handleMouseLeave = useCallback(() => {\n        setCurrent(null)\n        hideTooltip()\n    }, [setCurrent, hideTooltip])\n\n    const handleClick = useCallback(\n        event => {\n            onClick(link, event)\n        },\n        [onClick, link]\n    )\n\n    return (\n        <>\n            {enableGradient && (\n                <SankeyLinkGradient\n                    id={linkId}\n                    layout={layout}\n                    startColor={link.startColor || link.source.color}\n                    endColor={link.endColor || link.target.color}\n                />\n            )}\n            <animated.path\n                fill={enableGradient ? `url(\"#${encodeURI(linkId)}\")` : animatedProps.color}\n                d={animatedPath}\n                fillOpacity={animatedProps.opacity}\n                onMouseEnter={isInteractive ? handleMouseEnter : undefined}\n                onMouseMove={isInteractive ? handleMouseMove : undefined}\n                onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n                onClick={isInteractive ? handleClick : undefined}\n                style={{ mixBlendMode: blendMode }}\n            />\n        </>\n    )\n}\n\nSankeyLinksItem.propTypes = {\n    link: PropTypes.shape({\n        source: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        target: PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            color: PropTypes.string.isRequired,\n        }).isRequired,\n        color: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n        startColor: PropTypes.string,\n        endColor: PropTypes.string,\n    }).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    path: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n    opacity: PropTypes.number.isRequired,\n    blendMode: blendModePropType.isRequired,\n    enableGradient: PropTypes.bool.isRequired,\n    setCurrent: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    tooltip: PropTypes.func,\n    tooltipFormat: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n}\n\nexport default memo(SankeyLinksItem)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport { line, curveMonotoneX, curveMonotoneY } from 'd3-shape'\n\nexport const sankeyLinkHorizontal = () => {\n    const lineGenerator = line().curve(curveMonotoneX)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.x0 - n.source.x1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.source.x1, n.pos0 - halfThickness],\n            [n.source.x1 + padLength, n.pos0 - halfThickness],\n            [n.target.x0 - padLength, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 - halfThickness],\n            [n.target.x0, n.pos1 + halfThickness],\n            [n.target.x0 - padLength, n.pos1 + halfThickness],\n            [n.source.x1 + padLength, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 + halfThickness],\n            [n.source.x1, n.pos0 - halfThickness],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n\nexport const sankeyLinkVertical = () => {\n    const lineGenerator = line().curve(curveMonotoneY)\n\n    return (n, contract) => {\n        const thickness = Math.max(1, n.thickness - contract * 2)\n        const halfThickness = thickness / 2\n        const linkLength = n.target.y0 - n.source.y1\n        const padLength = linkLength * 0.12\n\n        const dots = [\n            [n.pos0 + halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1 + padLength],\n            [n.pos1 + halfThickness, n.target.y0 - padLength],\n            [n.pos1 + halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0],\n            [n.pos1 - halfThickness, n.target.y0 - padLength],\n            [n.pos0 - halfThickness, n.source.y1 + padLength],\n            [n.pos0 - halfThickness, n.source.y1],\n            [n.pos0 + halfThickness, n.source.y1],\n        ]\n\n        return lineGenerator(dots) + 'Z'\n    }\n}\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { blendModePropType } from '@nivo/core'\nimport SankeyLinksItem from './SankeyLinksItem'\nimport { sankeyLinkHorizontal, sankeyLinkVertical } from './links'\n\nconst SankeyLinks = ({\n    links,\n    layout,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    setCurrentLink,\n    currentNode,\n    currentLink,\n    isCurrentLink,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    tooltip,\n}) => {\n    const getOpacity = link => {\n        if (!currentNode && !currentLink) return linkOpacity\n        if (isCurrentLink(link)) return linkHoverOpacity\n        return linkHoverOthersOpacity\n    }\n\n    const getLinkPath = layout === 'horizontal' ? sankeyLinkHorizontal() : sankeyLinkVertical()\n\n    return links.map(link => (\n        <SankeyLinksItem\n            key={`${link.source.id}.${link.target.id}`}\n            link={link}\n            layout={layout}\n            path={getLinkPath(link, linkContract)}\n            color={link.color}\n            opacity={getOpacity(link)}\n            blendMode={linkBlendMode}\n            enableGradient={enableLinkGradient}\n            setCurrent={setCurrentLink}\n            isInteractive={isInteractive}\n            onClick={onClick}\n            tooltip={tooltip}\n            tooltipFormat={tooltipFormat}\n        />\n    ))\n}\n\nSankeyLinks.propTypes = {\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    links: PropTypes.arrayOf(\n        PropTypes.shape({\n            source: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            target: PropTypes.shape({\n                id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n                label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            }).isRequired,\n            thickness: PropTypes.number.isRequired,\n            color: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n    linkOpacity: PropTypes.number.isRequired,\n    linkHoverOpacity: PropTypes.number.isRequired,\n    linkHoverOthersOpacity: PropTypes.number.isRequired,\n    linkContract: PropTypes.number.isRequired,\n    linkBlendMode: blendModePropType.isRequired,\n    enableLinkGradient: PropTypes.bool.isRequired,\n    tooltip: PropTypes.func,\n    setCurrentLink: PropTypes.func.isRequired,\n    currentLink: PropTypes.object,\n    isCurrentLink: PropTypes.func.isRequired,\n    isInteractive: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLinks)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { memo } from 'react'\nimport PropTypes from 'prop-types'\nimport { useSprings, animated } from 'react-spring'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\nconst SankeyLabels = ({\n    nodes,\n    layout,\n    width,\n    height,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    getLabelTextColor,\n}) => {\n    const theme = useTheme()\n\n    const labelRotation = labelOrientation === 'vertical' ? -90 : 0\n    const labels = nodes.map(node => {\n        let x\n        let y\n        let textAnchor\n        if (layout === 'horizontal') {\n            y = node.y + node.height / 2\n            if (node.x < width / 2) {\n                if (labelPosition === 'inside') {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                } else {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    x = node.x - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'end'\n                } else {\n                    x = node.x1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'middle' : 'start'\n                }\n            }\n        } else if (layout === 'vertical') {\n            x = node.x + node.width / 2\n            if (node.y < height / 2) {\n                if (labelPosition === 'inside') {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                } else {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                }\n            } else {\n                if (labelPosition === 'inside') {\n                    y = node.y - labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'start' : 'middle'\n                } else {\n                    y = node.y1 + labelPadding\n                    textAnchor = labelOrientation === 'vertical' ? 'end' : 'middle'\n                }\n            }\n        }\n\n        return {\n            id: node.id,\n            label: node.label,\n            x,\n            y,\n            textAnchor,\n            color: getLabelTextColor(node),\n        }\n    })\n\n    const { animate, config: springConfig } = useMotionConfig()\n    const springs = useSprings(\n        labels.length,\n        labels.map(label => ({\n            transform: `translate(${label.x}, ${label.y}) rotate(${labelRotation})`,\n            color: label.color,\n            config: springConfig,\n            immediate: !animate,\n        }))\n    )\n\n    return springs.map((animatedProps, index) => {\n        const label = labels[index]\n\n        return (\n            <animated.text\n                key={label.id}\n                dominantBaseline=\"central\"\n                textAnchor={label.textAnchor}\n                transform={animatedProps.transform}\n                style={{\n                    ...theme.labels.text,\n                    fill: animatedProps.color,\n                    pointerEvents: 'none',\n                }}\n            >\n                {label.label}\n            </animated.text>\n        )\n    })\n}\n\nSankeyLabels.propTypes = {\n    nodes: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n            x1: PropTypes.number.isRequired,\n            x: PropTypes.number.isRequired,\n            y: PropTypes.number.isRequired,\n            width: PropTypes.number.isRequired,\n            height: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n    layout: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    labelPosition: PropTypes.oneOf(['inside', 'outside']).isRequired,\n    labelPadding: PropTypes.number.isRequired,\n    labelOrientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n    getLabelTextColor: PropTypes.func.isRequired,\n}\n\nexport default memo(SankeyLabels)\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React, { Fragment } from 'react'\nimport { uniq } from 'lodash'\nimport { SvgWrapper, useDimensions, withContainer } from '@nivo/core'\nimport { BoxLegendSvg } from '@nivo/legends'\nimport { SankeyDefaultProps, SankeyPropTypes } from './props'\nimport { useSankey } from './hooks'\nimport SankeyNodes from './SankeyNodes'\nimport SankeyLinks from './SankeyLinks'\nimport SankeyLabels from './SankeyLabels'\n\nconst Sankey = ({\n    data,\n    layout,\n    sort,\n    align,\n    width,\n    height,\n    margin: partialMargin,\n    colors,\n    nodeThickness,\n    nodeSpacing,\n    nodeInnerPadding,\n    nodeBorderColor,\n    nodeOpacity,\n    nodeHoverOpacity,\n    nodeHoverOthersOpacity,\n    nodeBorderWidth,\n    linkOpacity,\n    linkHoverOpacity,\n    linkHoverOthersOpacity,\n    linkContract,\n    linkBlendMode,\n    enableLinkGradient,\n    enableLabels,\n    labelPosition,\n    labelPadding,\n    labelOrientation,\n    label,\n    labelFormat,\n    labelTextColor,\n    nodeTooltip,\n    linkTooltip,\n    isInteractive,\n    onClick,\n    tooltipFormat,\n    legends,\n    layers,\n    role,\n}) => {\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const {\n        nodes,\n        links,\n        legendData,\n        getNodeBorderColor,\n        currentNode,\n        setCurrentNode,\n        currentLink,\n        setCurrentLink,\n        getLabelTextColor,\n    } = useSankey({\n        data,\n        layout,\n        width: innerWidth,\n        height: innerHeight,\n        sort,\n        align,\n        colors,\n        nodeThickness,\n        nodeSpacing,\n        nodeInnerPadding,\n        nodeBorderColor,\n        label,\n        labelFormat,\n        labelTextColor,\n    })\n\n    let isCurrentNode = () => false\n    let isCurrentLink = () => false\n\n    if (currentLink) {\n        isCurrentNode = ({ id }) => id === currentLink.source.id || id === currentLink.target.id\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentLink.source.id && target.id === currentLink.target.id\n    }\n\n    if (currentNode) {\n        let currentNodeIds = [currentNode.id]\n        links\n            .filter(\n                ({ source, target }) => source.id === currentNode.id || target.id === currentNode.id\n            )\n            .forEach(({ source, target }) => {\n                currentNodeIds.push(source.id)\n                currentNodeIds.push(target.id)\n            })\n\n        currentNodeIds = uniq(currentNodeIds)\n        isCurrentNode = ({ id }) => currentNodeIds.includes(id)\n        isCurrentLink = ({ source, target }) =>\n            source.id === currentNode.id || target.id === currentNode.id\n    }\n\n    const layerProps = {\n        links,\n        nodes,\n        margin,\n        width,\n        height,\n        outerWidth,\n        outerHeight,\n    }\n\n    const layerById = {\n        links: (\n            <SankeyLinks\n                key=\"links\"\n                links={links}\n                layout={layout}\n                linkContract={linkContract}\n                linkOpacity={linkOpacity}\n                linkHoverOpacity={linkHoverOpacity}\n                linkHoverOthersOpacity={linkHoverOthersOpacity}\n                linkBlendMode={linkBlendMode}\n                enableLinkGradient={enableLinkGradient}\n                setCurrentLink={setCurrentLink}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentLink={isCurrentLink}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={linkTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        nodes: (\n            <SankeyNodes\n                key=\"nodes\"\n                nodes={nodes}\n                nodeOpacity={nodeOpacity}\n                nodeHoverOpacity={nodeHoverOpacity}\n                nodeHoverOthersOpacity={nodeHoverOthersOpacity}\n                nodeBorderWidth={nodeBorderWidth}\n                getNodeBorderColor={getNodeBorderColor}\n                setCurrentNode={setCurrentNode}\n                currentNode={currentNode}\n                currentLink={currentLink}\n                isCurrentNode={isCurrentNode}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                tooltip={nodeTooltip}\n                tooltipFormat={tooltipFormat}\n            />\n        ),\n        labels: null,\n        legends: legends.map((legend, i) => (\n            <BoxLegendSvg\n                key={`legend${i}`}\n                {...legend}\n                containerWidth={innerWidth}\n                containerHeight={innerHeight}\n                data={legendData}\n            />\n        )),\n    }\n\n    if (enableLabels) {\n        layerById.labels = (\n            <SankeyLabels\n                key=\"labels\"\n                nodes={nodes}\n                layout={layout}\n                width={innerWidth}\n                height={innerHeight}\n                labelPosition={labelPosition}\n                labelPadding={labelPadding}\n                labelOrientation={labelOrientation}\n                getLabelTextColor={getLabelTextColor}\n            />\n        )\n    }\n\n    return (\n        <SvgWrapper width={outerWidth} height={outerHeight} margin={margin} role={role}>\n            {layers.map((layer, i) => {\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{layer(layerProps)}</Fragment>\n                }\n\n                return layerById[layer]\n            })}\n        </SvgWrapper>\n    )\n}\n\nSankey.propTypes = SankeyPropTypes\n\nconst WrappedSankey = withContainer(Sankey)\nWrappedSankey.defaultProps = SankeyDefaultProps\n\nexport default WrappedSankey\n","/*\n * This file is part of the nivo project.\n *\n * Copyright 2016-present, Raphaël Benitte.\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n */\nimport React from 'react'\nimport { ResponsiveWrapper } from '@nivo/core'\nimport Sankey from './Sankey'\n\nconst ResponsiveSankey = props => (\n    <ResponsiveWrapper>\n        {({ width, height }) => <Sankey width={width} height={height} {...props} />}\n    </ResponsiveWrapper>\n)\n\nexport default ResponsiveSankey\n"]},"metadata":{},"sourceType":"module"}