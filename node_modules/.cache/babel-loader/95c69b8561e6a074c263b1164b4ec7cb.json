{"ast":null,"code":"var _jsxFileName = \"D:\\\\TCS\\\\DynaChain\\\\dynachain\\\\dynachain-master\\\\dynachain\\\\src\\\\MyProvider.js\";\nimport React, { Component } from 'react';\nimport Sidebar from './Components/Sidebar/Sidebar'; //make a new context\n\nexport const MyContext = React.createContext(); //create a provider component\n\nclass MyProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      wrapperDiv: 'wrapper',\n      pageContentDiv: 'page-content-wrapper',\n      isOpen: '',\n      sideBarOpen: false,\n      sideBar: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(MyContext.Provider, {\n      value: {\n        state: this.state,\n        toggleButtonClickHandler: () => {\n          let new_isOpen = '';\n          let new_sideBar = null;\n          let new_wrapper = \"wrapper\";\n          let new_pageContentDiv = 'page-content-wrapper';\n\n          if (this.state.isOpen == '') {\n            new_isOpen = 'open';\n          } else {\n            new_isOpen = '';\n          }\n\n          if (this.state.sideBar === null) {\n            new_sideBar = /*#__PURE__*/React.createElement(Sidebar, {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 39\n              }\n            });\n          } else {\n            new_sideBar = null;\n          }\n\n          if (this.state.wrapperDiv === 'wrapper') {\n            new_wrapper = 'wrapper-active';\n          } else {\n            new_wrapper = 'wrapper';\n          }\n\n          if (this.state.pageContentDiv === 'page-content-wrapper') {\n            new_pageContentDiv = 'page-content-wrapper-active';\n          } else {\n            new_pageContentDiv = 'page-content-wrapper';\n          }\n\n          this.setState({\n            sideBar: new_sideBar,\n            isOpen: new_isOpen,\n            wrapperDiv: new_wrapper,\n            pageContentDiv: new_pageContentDiv\n          });\n          this.setState(prevState => {\n            console.log(\"Event occured and method ran.\");\n            return {\n              sideBarOpen: !prevState.sideBarOpen\n            };\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default MyProvider;","map":{"version":3,"sources":["D:/TCS/DynaChain/dynachain/dynachain-master/dynachain/src/MyProvider.js"],"names":["React","Component","Sidebar","MyContext","createContext","MyProvider","state","wrapperDiv","pageContentDiv","isOpen","sideBarOpen","sideBar","render","toggleButtonClickHandler","new_isOpen","new_sideBar","new_wrapper","new_pageContentDiv","setState","prevState","console","log","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,8BAApB,C,CAGA;;AACA,OAAO,MAAMC,SAAS,GAAGH,KAAK,CAACI,aAAN,EAAlB,C,CAEP;;AACA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB;AACJC,MAAAA,UAAU,EAAC,SADP;AAEJC,MAAAA,cAAc,EAAC,sBAFX;AAGJC,MAAAA,MAAM,EAAE,EAHJ;AAIJC,MAAAA,WAAW,EAAE,KAJT;AAKJC,MAAAA,OAAO,EAAE;AALL,KADuB;AAAA;;AAU/BC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,SAAD,CAAW,QAAX;AAAoB,MAAA,KAAK,EAAE;AACvBN,QAAAA,KAAK,EAAE,KAAKA,KADW;AAEvBO,QAAAA,wBAAwB,EAAE,MAAM;AAE5B,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,WAAW,GAAG,IAAlB;AACA,cAAIC,WAAW,GAAG,SAAlB;AACA,cAAIC,kBAAkB,GAAE,sBAAxB;;AAEA,cAAI,KAAKX,KAAL,CAAWG,MAAX,IAAqB,EAAzB,EAA6B;AACzBK,YAAAA,UAAU,GAAG,MAAb;AACH,WAFD,MAGK;AACDA,YAAAA,UAAU,GAAC,EAAX;AACH;;AAED,cAAG,KAAKR,KAAL,CAAWK,OAAX,KAAuB,IAA1B,EAAgC;AAC5BI,YAAAA,WAAW,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AACH,WAFD,MAGK;AACDA,YAAAA,WAAW,GAAE,IAAb;AACH;;AAGD,cAAG,KAAKT,KAAL,CAAWC,UAAX,KAA0B,SAA7B,EAAuC;AACnCS,YAAAA,WAAW,GAAE,gBAAb;AACH,WAFD,MAGI;AACAA,YAAAA,WAAW,GAAE,SAAb;AACH;;AAGD,cAAG,KAAKV,KAAL,CAAWE,cAAX,KAA8B,sBAAjC,EAAwD;AACpDS,YAAAA,kBAAkB,GAAE,6BAApB;AACH,WAFD,MAGI;AACAA,YAAAA,kBAAkB,GAAE,sBAApB;AACH;;AAGD,eAAKC,QAAL,CAAc;AACVP,YAAAA,OAAO,EAAEI,WADC;AAEVN,YAAAA,MAAM,EAAEK,UAFE;AAGVP,YAAAA,UAAU,EAAES,WAHF;AAIVR,YAAAA,cAAc,EAAES;AAJN,WAAd;AAOA,eAAKC,QAAL,CAAeC,SAAD,IAAe;AACzBC,YAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ;AACA,mBAAO;AAAEX,cAAAA,WAAW,EAAE,CAACS,SAAS,CAACT;AAA1B,aAAP;AACH,WAHD;AAIH;AAnDsB,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAqDK,KAAKY,KAAL,CAAWC,QArDhB,CADJ;AAyDH;;AApE8B;;AAuEnC,eAAelB,UAAf","sourcesContent":["import React, { Component } from 'react'\nimport Sidebar from './Components/Sidebar/Sidebar';\n\n\n//make a new context\nexport const MyContext = React.createContext();\n\n//create a provider component\nclass MyProvider extends Component {\n    state = {\n        wrapperDiv:'wrapper',\n        pageContentDiv:'page-content-wrapper',\n        isOpen: '',\n        sideBarOpen: false,\n        sideBar: null\n    }\n\n\n    render() {\n        return (\n            <MyContext.Provider value={{\n                state: this.state,\n                toggleButtonClickHandler: () => {\n\n                    let new_isOpen = '';\n                    let new_sideBar = null;\n                    let new_wrapper = \"wrapper\";\n                    let new_pageContentDiv= 'page-content-wrapper';\n\n                    if (this.state.isOpen == '') {\n                        new_isOpen = 'open';\n                    }\n                    else {\n                        new_isOpen='';\n                    }\n\n                    if(this.state.sideBar === null) {\n                        new_sideBar = <Sidebar />;\n                    }\n                    else {\n                        new_sideBar= null;\n                    }\n\n\n                    if(this.state.wrapperDiv === 'wrapper'){\n                        new_wrapper= 'wrapper-active'\n                    }\n                    else{\n                        new_wrapper= 'wrapper'\n                    }\n                    \n\n                    if(this.state.pageContentDiv === 'page-content-wrapper'){\n                        new_pageContentDiv= 'page-content-wrapper-active'\n                    }\n                    else{\n                        new_pageContentDiv= 'page-content-wrapper'\n                    }\n                    \n                \n                    this.setState({\n                        sideBar: new_sideBar,\n                        isOpen: new_isOpen,\n                        wrapperDiv: new_wrapper,\n                        pageContentDiv: new_pageContentDiv,\n                    })\n                \n                    this.setState((prevState) => {\n                        console.log(\"Event occured and method ran.\");\n                        return { sideBarOpen: !prevState.sideBarOpen };\n                    })\n                },\n            }}>\n                {this.props.children}\n            </MyContext.Provider>\n        )\n    }\n}\n\nexport default MyProvider;"]},"metadata":{},"sourceType":"module"}